[{"path":"https://docs.ropensci.org/weathercan/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to weathercan","title":"Contributing to weathercan","text":"Thank contributions! Following guidelines help streamline process contributing make sure ’re page. ask read guide follow best abilities, welcome contributions , regardless level experience. participating project, agree abide code conduct.","code":""},{"path":"https://docs.ropensci.org/weathercan/CONTRIBUTING.html","id":"types-of-contributions","dir":"","previous_headings":"","what":"Types of contributions","title":"Contributing to weathercan","text":"Don’t feel must computer whiz make meaningful contributions. Feel free : Identify areas future development (open Issue) Identify issues/bugs (open Issue) Write tutorials/vignettes (open Pull Request contribute ones , make elsewhere send us link) Add functionality (open Pull Request) Fix bugs (open Pull Request)","code":""},{"path":"https://docs.ropensci.org/weathercan/CONTRIBUTING.html","id":"new-to-github","dir":"","previous_headings":"","what":"New to GitHub?","title":"Contributing to weathercan","text":"Getting ready make first contribution? couple tutorials may wish check : Tutorial first-timers contribute (-depth lessons) GitHub setup GitHub pull requests.)","code":""},{"path":"https://docs.ropensci.org/weathercan/CONTRIBUTING.html","id":"how-to-contribute-code","dir":"","previous_headings":"","what":"How to contribute code","title":"Contributing to weathercan","text":"Fork repository Clone repository GitHub computer e.g,. git clone https://github.com/ropensci/weathercan.git git remote add upstream https://github.com/ropensci/weathercan.git making changes make sure pull changes upstream git pull upstream changes beyond minor typos, add item NEWS.md describing changes add DESCRIPTION file contributor Push GitHub account Submit pull request home base (main branch) ropensci/weathercan","code":""},{"path":"https://docs.ropensci.org/weathercan/CONTRIBUTING.html","id":"code-formatting","dir":"","previous_headings":"","what":"Code formatting","title":"Contributing to weathercan","text":"general follow convention http://r-pkgs..co.nz/r.html#style (snake_case functions argument names, etc.) conflict, default style weathercan Use explicit package imports (.e. package_name::package_function) avoid @import possible","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/weathercan/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Steffi LaZerte  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. weathercan Copyright (C) 2019 Steffi LaZerte This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/weathercan/articles/flags.html","id":"what-are-flagscodes","dir":"Articles","previous_headings":"","what":"What are flags/codes","title":"Flags and codes","text":"data output weather_dl() function include corresponding _flag columns data column. columns used ECCC add notes regarding measurements. Similarly, data output normals_dl() function include corresponding _code columns. columns used ECCC add notes regarding amount data used calculate normals.","code":""},{"path":"https://docs.ropensci.org/weathercan/articles/flags.html","id":"flags","dir":"Articles","previous_headings":"What are flags/codes","what":"Flags","title":"Flags and codes","text":"weather_dl() function format = TRUE (default), data corresponding flags M, NA, [empty] L replaced NA. example, sample unformatted data Magog station Quebec looks like: output, can see two flags: ^ Total Precip M Snow Grnd Last Day sample, formatted looks like: can see, still two flags, missing data flag (M) now replaced NA. flag ^ , indicates “value displayed based incomplete data” (see ).","code":"## # A tibble: 12 × 6 ##    station_name `Date/Time` `Total Precip (mm)` `Total Precip Flag` `Snow Grnd Last Day (cm)` ##    <chr>        <chr>       <chr>               <chr>               <chr>                     ##  1 MAGOG        2017-03     30.4                ^                   <NA>                      ##  2 MAGOG        2017-04     114.0               ^                   0                         ##  3 MAGOG        2017-05     78.8                ^                   0                         ##  4 MAGOG        2017-06     140.7               ^                   0                         ##  5 MAGOG        2017-07     80.7                <NA>                0                         ##  6 MAGOG        2017-08     135.8               <NA>                0                         ##  7 MAGOG        2017-09     63.0                ^                   0                         ##  8 MAGOG        2017-10     140.8               ^                   0                         ##  9 MAGOG        2017-11     70.0                ^                   0                         ## 10 MAGOG        2017-12     45.7                ^                   10                        ## 11 MAGOG        2018-01     34.6                ^                   2                         ## 12 MAGOG        2018-02     77.2                ^                   0                         ## # ℹ 1 more variable: `Snow Grnd Last Day Flag` <chr> ## # A tibble: 12 × 5 ##    date       total_precip total_precip_flag snow_grnd_last_day snow_grnd_last_day_flag ##    <date>            <dbl> <chr>                          <dbl> <chr>                   ##  1 2017-03-01         30.4 ^                                 NA M                       ##  2 2017-04-01        114   ^                                  0 <NA>                    ##  3 2017-05-01         78.8 ^                                  0 <NA>                    ##  4 2017-06-01        141.  ^                                  0 <NA>                    ##  5 2017-07-01         80.7 <NA>                               0 <NA>                    ##  6 2017-08-01        136.  <NA>                               0 <NA>                    ##  7 2017-09-01         63   ^                                  0 <NA>                    ##  8 2017-10-01        141.  ^                                  0 <NA>                    ##  9 2017-11-01         70   ^                                  0 <NA>                    ## 10 2017-12-01         45.7 ^                                 10 <NA>                    ## 11 2018-01-01         34.6 ^                                  2 <NA>                    ## 12 2018-02-01         77.2 ^                                  0 <NA>"},{"path":"https://docs.ropensci.org/weathercan/articles/flags.html","id":"flags---weather-data","dir":"Articles","previous_headings":"What are flags/codes","what":"Flags - Weather Data","title":"Flags and codes","text":"flags index can accessed built data frame: flags","code":""},{"path":"https://docs.ropensci.org/weathercan/articles/flags.html","id":"codes","dir":"Articles","previous_headings":"What are flags/codes","what":"Codes","title":"Flags and codes","text":"normals_dl() function, codes associated variable: example, , code indicates temperature variables meet WMO ‘3 5 rule’ (3 consecutive 5 total missing either temperature precipitation).","code":"## Warning: There were 2 warnings in `dplyr::mutate()`. ## The first warning was: ## ℹ In argument: `frost = purrr::map2(...)`. ## Caused by warning: ## ! 21 parsing failures. ## row col  expected     actual         file ##   4  -- 3 columns 15 columns literal data ##   5  -- 3 columns 15 columns literal data ##   6  -- 3 columns 15 columns literal data ##   7  -- 3 columns 15 columns literal data ##   8  -- 3 columns 15 columns literal data ## ... ... ......... .......... ............ ## See problems(...) for more details. ## ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. ## # A tibble: 13 × 7 ##    period temp_daily_average temp_daily_average_code temp_daily_max temp_daily_max_code ##    <fct>               <dbl> <chr>                            <dbl> <chr>               ##  1 Jan                 -16.6 A                                -11.1 A                   ##  2 Feb                 -13.6 A                                 -8.1 A                   ##  3 Mar                  -6.2 A                                 -1   A                   ##  4 Apr                   4   A                                 10.5 A                   ##  5 May                  10.6 A                                 17.8 A                   ##  6 Jun                  15.9 A                                 22.4 A                   ##  7 Jul                  18.5 A                                 25.2 A                   ##  8 Aug                  17.7 A                                 24.9 A                   ##  9 Sep                  11.8 A                                 18.9 A                   ## 10 Oct                   4.1 A                                 10.4 A                   ## 11 Nov                  -5.6 A                                 -0.5 A                   ## 12 Dec                 -14   A                                 -9   A                   ## 13 Year                  2.2 A                                  8.4 A                   ## # ℹ 2 more variables: temp_daily_min <dbl>, temp_daily_min_code <chr>"},{"path":"https://docs.ropensci.org/weathercan/articles/flags.html","id":"codes---climate-normals","dir":"Articles","previous_headings":"What are flags/codes","what":"Codes - Climate Normals","title":"Flags and codes","text":"codes index climate normals can accessed built-data frame: codes","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/articles/glossary_normals.html","id":"original-names-and-units","dir":"Articles","previous_headings":"","what":"Original names and units","title":"Climate Normals: Terms and Units","text":"represent original ECCC measurement names units corresponding measurements weathercan.","code":""},{"path":"https://docs.ropensci.org/weathercan/articles/interpolate_data.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Interpolating","text":"’ll need several packages tidyverse addition weathercan complete following analysis.","code":"library(weathercan) library(ggplot2) library(dplyr)"},{"path":"https://docs.ropensci.org/weathercan/articles/interpolate_data.html","id":"general-usage","dir":"Articles","previous_headings":"","what":"General usage","title":"Interpolating","text":"can merge weather data data frames linearly interpolating points. example, dataset weather data Kamloops well data set finch visits RFID feeder Although times weather data exactly match finch data, can merge together linear interpolation. function uses approx function stats package hood. specify want temperature (temp) column: Ooops! happened? Well weather data Kamloops returned weathercan times set ‘local’ timezone (without) daylight savings. simplicity, times scored “UTC” according R. finches data, hand, set true timezone: means also daylight savings applied, eep! interpolate, data must timezone. easiest way forward convert finches data , ‘local’ time without daylight savings kamloops data. First ’ll transform non-daylight savings (.e. Etc/GMT+8, note +8 intentionally inverted) with_tz() function lubridate package. Now ’ll force UTC force_tz() function lubridate package. Now finches kamloops data nominal actual timezones! Let’s continue Let’s take look interpolate points specifically plot chunk unnamed-chunk-10 mean data? plot chunk unnamed-chunk-11","code":"glimpse(kamloops) ## Rows: 4,368 ## Columns: 37 ## $ station_name     <chr> \"KAMLOOPS A\", \"KAMLOOPS A\", \"KAMLOOPS A\", \"KAMLOOPS A\", \"KAMLOOPS A\", \"KAMLOOPS A\", \"KAMLOOPS A\", \"KAMLOOPS A… ## $ station_id       <dbl> 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 51423, 5142… ## $ station_operator <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ prov             <chr> \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"BC\", \"… ## $ lat              <dbl> 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 50.7, 5… ## $ lon              <dbl> -120.45, -120.45, -120.45, -120.45, -120.45, -120.45, -120.45, -120.45, -120.45, -120.45, -120.45, -120.45, -… ## $ elev             <dbl> 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.3, 345.… ## $ climate_id       <chr> \"1163781\", \"1163781\", \"1163781\", \"1163781\", \"1163781\", \"1163781\", \"1163781\", \"1163781\", \"1163781\", \"1163781\",… ## $ WMO_id           <chr> \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"71887\", \"… ## $ TC_id            <chr> \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA\", \"YKA… ## $ date             <date> 2016-01-01, 2016-01-01, 2016-01-01, 2016-01-01, 2016-01-01, 2016-01-01, 2016-01-01, 2016-01-01, 2016-01-01, … ## $ time             <dttm> 2016-01-01 00:00:00, 2016-01-01 01:00:00, 2016-01-01 02:00:00, 2016-01-01 03:00:00, 2016-01-01 04:00:00, 201… ## $ year             <chr> \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016\", \"2016… ## $ month            <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"… ## $ day              <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"… ## $ hour             <chr> \"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\", \"05:00\", \"06:00\", \"07:00\", \"08:00\", \"09:00\", \"10:00\", \"11:00\", \"… ## $ weather          <chr> NA, \"Mostly Cloudy\", NA, NA, \"Cloudy\", NA, NA, \"Cloudy\", NA, \"Snow\", \"Snow\", \"Snow\", \"Snow\", \"Snow\", \"Snow\", … ## $ hmdx             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ hmdx_flag        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ precip_amt       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ precip_amt_flag  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ pressure         <dbl> 99.95, 99.93, 99.92, 99.90, 99.86, 99.82, 99.80, 99.78, 99.77, 99.78, 99.79, 99.74, 99.69, 99.62, 99.56, 99.5… ## $ pressure_flag    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ rel_hum          <dbl> 74, 76, 74, 73, 70, 71, 69, 69, 71, 71, 71, 70, 69, 70, 68, 68, 70, 74, 73, 74, 74, 74, 77, 72, 72, 73, 74, 7… ## $ rel_hum_flag     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ temp             <dbl> -9.1, -9.6, -9.9, -9.5, -9.4, -9.8, -10.0, -10.2, -10.1, -9.7, -9.4, -9.0, -8.6, -8.2, -8.1, -7.7, -8.1, -8.5… ## $ temp_dew         <dbl> -12.9, -13.1, -13.7, -13.5, -13.9, -14.1, -14.7, -14.9, -14.4, -14.0, -13.7, -13.5, -13.3, -12.8, -13.0, -12.… ## $ temp_dew_flag    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ temp_flag        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ visib            <dbl> 64.4, 64.4, 64.4, 64.4, 64.4, 64.4, 64.4, 64.4, 48.3, 48.3, 48.3, 48.3, 48.3, 48.3, 48.3, 48.3, 24.1, 48.3, 4… ## $ visib_flag       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ wind_chill       <dbl> -17, -17, -18, -17, -17, -17, -18, -17, -17, -16, -15, -14, -14, -13, -13, -13, -13, -14, -13, -14, -14, -12,… ## $ wind_chill_flag  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ wind_dir         <dbl> 13, 11, 11, 11, 11, 10, 9, 7, 7, 10, 11, 10, 10, 13, 11, 10, 10, 9, 12, 10, 13, 12, 10, 12, NA, 32, 26, 26, 2… ## $ wind_dir_flag    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ wind_spd         <dbl> 19, 20, 20, 18, 18, 16, 23, 15, 14, 15, 12, 11, 12, 9, 10, 12, 11, 12, 10, 11, 11, 6, 6, 4, 0, 4, 9, 10, 8, 7… ## $ wind_spd_flag    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… glimpse(finches) ## Rows: 16,886 ## Columns: 10 ## $ animal_id <fct> 041868FF93, 041868FF93, 041868FF93, 06200003BB, 06200003BB, 06200003BB, 06200003BB, 06200003BB, 041868BED6, 041868BE… ## $ date      <date> 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03… ## $ time      <dttm> 2016-03-01 06:57:42, 2016-03-01 06:58:41, 2016-03-01 07:07:21, 2016-03-01 07:32:34, 2016-03-01 07:32:35, 2016-03-01… ## $ logger_id <fct> 2300, 2300, 2300, 2400, 2400, 2400, 2400, 2400, 2300, 2300, 2300, 2300, 2300, 2400, 2300, 2400, 2400, 2400, 2400, 24… ## $ species   <chr> \"Mountain Chickadee\", \"Mountain Chickadee\", \"Mountain Chickadee\", \"House Finch\", \"House Finch\", \"House Finch\", \"Hous… ## $ age       <chr> \"AHY\", \"AHY\", \"AHY\", \"SY\", \"SY\", \"SY\", \"SY\", \"SY\", \"AHY\", \"AHY\", \"AHY\", \"AHY\", \"AHY\", \"SY\", \"AHY\", \"SY\", \"SY\", \"SY\",… ## $ sex       <chr> \"U\", \"U\", \"U\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"M\", \"M\", \"… ## $ site_name <chr> \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kam… ## $ lon       <dbl> -120.3622, -120.3622, -120.3622, -120.3635, -120.3635, -120.3635, -120.3635, -120.3635, -120.3622, -120.3622, -120.3… ## $ lat       <dbl> 50.66967, 50.66967, 50.66967, 50.66938, 50.66938, 50.66938, 50.66938, 50.66938, 50.66967, 50.66967, 50.66967, 50.669… finches_temperature <- weather_interp(data = finches, weather = kamloops, cols = \"temp\") ## Error: `data` and `weather` timezones must match kamloops$time[1:5] ## [1] \"2016-01-01 00:00:00 UTC\" \"2016-01-01 01:00:00 UTC\" \"2016-01-01 02:00:00 UTC\" \"2016-01-01 03:00:00 UTC\" \"2016-01-01 04:00:00 UTC\" finches$time[1:5] ## [1] \"2016-03-01 06:57:42 -08\" \"2016-03-01 06:58:41 -08\" \"2016-03-01 07:07:21 -08\" \"2016-03-01 07:32:34 -08\" \"2016-03-01 07:32:35 -08\" finches <- mutate(finches, time = lubridate::with_tz(time, \"Etc/GMT+8\")) finches <- mutate(finches, time = lubridate::force_tz(time, \"UTC\")) finches_temperature <- weather_interp(data = finches, weather = kamloops, cols = \"temp\") ## temp is missing 4 out of 4368 data, interpolation may be less accurate as a result. summary(finches_temperature) ##       animal_id         date                 time                        logger_id     species              age            ##  0620000513:7624   Min.   :2016-03-01   Min.   :2016-03-01 06:57:42.00   1500:6370   Length:16886       Length:16886       ##  041868D861:2767   1st Qu.:2016-03-05   1st Qu.:2016-03-05 13:54:13.25   2100: 968   Class :character   Class :character   ##  0620000514:1844   Median :2016-03-09   Median :2016-03-09 16:54:47.00   2200:2266   Mode  :character   Mode  :character   ##  06200004F8:1386   Mean   :2016-03-08   Mean   :2016-03-09 07:45:58.05   2300:3531                                         ##  041868BED6: 944   3rd Qu.:2016-03-13   3rd Qu.:2016-03-13 08:24:58.75   2400:1477                                         ##  06200003BB: 708   Max.   :2016-03-16   Max.   :2016-03-16 16:39:30.00   2700:2274                                         ##  (Other)   :1613                                                                                                           ##      sex             site_name              lon              lat             temp        ##  Length:16886       Length:16886       Min.   :-120.4   Min.   :50.67   Min.   :-1.763   ##  Class :character   Class :character   1st Qu.:-120.4   1st Qu.:50.67   1st Qu.: 5.212   ##  Mode  :character   Mode  :character   Median :-120.4   Median :50.67   Median : 8.991   ##                                        Mean   :-120.4   Mean   :50.67   Mean   : 8.617   ##                                        3rd Qu.:-120.4   3rd Qu.:50.67   3rd Qu.:11.943   ##                                        Max.   :-120.4   Max.   :50.67   Max.   :16.353   ## glimpse(finches_temperature) ## Rows: 16,886 ## Columns: 11 ## $ animal_id <fct> 041868FF93, 041868FF93, 041868FF93, 06200003BB, 06200003BB, 06200003BB, 06200003BB, 06200003BB, 041868BED6, 041868BE… ## $ date      <date> 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03… ## $ time      <dttm> 2016-03-01 06:57:42, 2016-03-01 06:58:41, 2016-03-01 07:07:21, 2016-03-01 07:32:34, 2016-03-01 07:32:35, 2016-03-01… ## $ logger_id <fct> 2300, 2300, 2300, 2400, 2400, 2400, 2400, 2400, 2300, 2300, 2300, 2300, 2300, 2400, 2300, 2400, 2400, 2400, 2400, 24… ## $ species   <chr> \"Mountain Chickadee\", \"Mountain Chickadee\", \"Mountain Chickadee\", \"House Finch\", \"House Finch\", \"House Finch\", \"Hous… ## $ age       <chr> \"AHY\", \"AHY\", \"AHY\", \"SY\", \"SY\", \"SY\", \"SY\", \"SY\", \"AHY\", \"AHY\", \"AHY\", \"AHY\", \"AHY\", \"SY\", \"AHY\", \"SY\", \"SY\", \"SY\",… ## $ sex       <chr> \"U\", \"U\", \"U\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"M\", \"M\", \"… ## $ site_name <chr> \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kam… ## $ lon       <dbl> -120.3622, -120.3622, -120.3622, -120.3635, -120.3635, -120.3635, -120.3635, -120.3635, -120.3622, -120.3622, -120.3… ## $ lat       <dbl> 50.66967, 50.66967, 50.66967, 50.66938, 50.66938, 50.66938, 50.66938, 50.66938, 50.66967, 50.66967, 50.66967, 50.669… ## $ temp      <dbl> 2.396167, 2.397806, 2.424500, 2.508556, 2.508611, 2.508667, 2.508722, 2.508778, 2.520278, 2.520500, 2.522667, 2.5228… compare1 <- select(finches_temperature, time, temp) compare1 <- mutate(compare1, type = \"interpolated\") compare2 <- select(kamloops, time, temp) compare2 <- mutate(compare2, type = \"original\") compare <- bind_rows(compare1, compare2)  ggplot(data = compare, aes(x = time, y = temp, colour = type)) +   geom_point(alpha = 0.5) +   scale_x_datetime(limits = range(compare1$time)) ## Warning: Removed 4000 rows containing missing values or values outside the scale range (`geom_point()`). ggplot(data = finches_temperature, aes(x = temp, fill = animal_id)) +   theme_bw() +   theme(legend.position = \"none\") +   geom_histogram(binwidth = 1) +   labs(x = \"Temperature (C)\", y = \"Activity Count\", fill = \"Finch ID\")"},{"path":"https://docs.ropensci.org/weathercan/articles/interpolate_data.html","id":"data-gaps","dir":"Articles","previous_headings":"","what":"Data gaps","title":"Interpolating","text":"default, gaps 2 hours (2 days, daily scale) interpolated (.e. filled values interpolated either side gap), longer gaps skipped filled NAs. can adjust behaviour na_gap. Note Environment Climate Change Canada data downloaded hourly scale, makes sense apply na_gap values less 1. example, note larger number NAs temp corresponds missing variables weather dataset:","code":"finches_temperature <- weather_interp(data = finches, weather = kamloops,                                       cols = \"temp\", na_gap = 1) ## temp is missing 4 out of 4368 data, interpolation may be less accurate as a result. summary(finches_temperature) ##       animal_id         date                 time                        logger_id     species              age            ##  0620000513:7624   Min.   :2016-03-01   Min.   :2016-03-01 06:57:42.00   1500:6370   Length:16886       Length:16886       ##  041868D861:2767   1st Qu.:2016-03-05   1st Qu.:2016-03-05 13:54:13.25   2100: 968   Class :character   Class :character   ##  0620000514:1844   Median :2016-03-09   Median :2016-03-09 16:54:47.00   2200:2266   Mode  :character   Mode  :character   ##  06200004F8:1386   Mean   :2016-03-08   Mean   :2016-03-09 07:45:58.05   2300:3531                                         ##  041868BED6: 944   3rd Qu.:2016-03-13   3rd Qu.:2016-03-13 08:24:58.75   2400:1477                                         ##  06200003BB: 708   Max.   :2016-03-16   Max.   :2016-03-16 16:39:30.00   2700:2274                                         ##  (Other)   :1613                                                                                                           ##      sex             site_name              lon              lat             temp        ##  Length:16886       Length:16886       Min.   :-120.4   Min.   :50.67   Min.   :-1.763   ##  Class :character   Class :character   1st Qu.:-120.4   1st Qu.:50.67   1st Qu.: 5.156   ##  Mode  :character   Mode  :character   Median :-120.4   Median :50.67   Median : 8.998   ##                                        Mean   :-120.4   Mean   :50.67   Mean   : 8.610   ##                                        3rd Qu.:-120.4   3rd Qu.:50.67   3rd Qu.:11.951   ##                                        Max.   :-120.4   Max.   :50.67   Max.   :16.353   ##                                                                         NA's   :195 finches_temperature %>%   select(date, time, temp) %>%   filter(is.na(temp)) ## # A tibble: 195 × 3 ##    date       time                 temp ##    <date>     <dttm>              <dbl> ##  1 2016-03-08 2016-03-08 12:10:10    NA ##  2 2016-03-08 2016-03-08 12:10:11    NA ##  3 2016-03-08 2016-03-08 12:10:13    NA ##  4 2016-03-08 2016-03-08 12:10:14    NA ##  5 2016-03-08 2016-03-08 12:12:26    NA ##  6 2016-03-08 2016-03-08 12:12:28    NA ##  7 2016-03-08 2016-03-08 12:12:29    NA ##  8 2016-03-08 2016-03-08 12:12:30    NA ##  9 2016-03-08 2016-03-08 12:12:32    NA ## 10 2016-03-08 2016-03-08 12:12:33    NA ## # ℹ 185 more rows kamloops %>%   select(time, temp) %>%   filter(is.na(temp)) ## # A tibble: 4 × 2 ##   time                 temp ##   <dttm>              <dbl> ## 1 2016-02-11 19:00:00    NA ## 2 2016-03-08 13:00:00    NA ## 3 2016-03-11 01:00:00    NA ## 4 2016-04-09 00:00:00    NA"},{"path":"https://docs.ropensci.org/weathercan/articles/interpolate_data.html","id":"multiple-weather-columns","dir":"Articles","previous_headings":"","what":"Multiple weather columns","title":"Interpolating","text":"also add one column time: plot chunk unnamed-chunk-13","code":"finches_weather <- weather_interp(data = finches, weather = kamloops,                                   cols = c(\"temp\", \"wind_spd\")) ## temp is missing 4 out of 4368 data, interpolation may be less accurate as a result. ## wind_spd is missing 4 out of 4368 data, interpolation may be less accurate as a result. summary(finches_weather) ##       animal_id         date                 time                        logger_id     species              age            ##  0620000513:7624   Min.   :2016-03-01   Min.   :2016-03-01 06:57:42.00   1500:6370   Length:16886       Length:16886       ##  041868D861:2767   1st Qu.:2016-03-05   1st Qu.:2016-03-05 13:54:13.25   2100: 968   Class :character   Class :character   ##  0620000514:1844   Median :2016-03-09   Median :2016-03-09 16:54:47.00   2200:2266   Mode  :character   Mode  :character   ##  06200004F8:1386   Mean   :2016-03-08   Mean   :2016-03-09 07:45:58.05   2300:3531                                         ##  041868BED6: 944   3rd Qu.:2016-03-13   3rd Qu.:2016-03-13 08:24:58.75   2400:1477                                         ##  06200003BB: 708   Max.   :2016-03-16   Max.   :2016-03-16 16:39:30.00   2700:2274                                         ##  (Other)   :1613                                                                                                           ##      sex             site_name              lon              lat             temp           wind_spd     ##  Length:16886       Length:16886       Min.   :-120.4   Min.   :50.67   Min.   :-1.763   Min.   : 0.00   ##  Class :character   Class :character   1st Qu.:-120.4   1st Qu.:50.67   1st Qu.: 5.212   1st Qu.:10.35   ##  Mode  :character   Mode  :character   Median :-120.4   Median :50.67   Median : 8.991   Median :17.72   ##                                        Mean   :-120.4   Mean   :50.67   Mean   : 8.617   Mean   :17.15   ##                                        3rd Qu.:-120.4   3rd Qu.:50.67   3rd Qu.:11.943   3rd Qu.:21.95   ##                                        Max.   :-120.4   Max.   :50.67   Max.   :16.353   Max.   :40.93   ## glimpse(finches_weather) ## Rows: 16,886 ## Columns: 12 ## $ animal_id <fct> 041868FF93, 041868FF93, 041868FF93, 06200003BB, 06200003BB, 06200003BB, 06200003BB, 06200003BB, 041868BED6, 041868BE… ## $ date      <date> 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03-01, 2016-03… ## $ time      <dttm> 2016-03-01 06:57:42, 2016-03-01 06:58:41, 2016-03-01 07:07:21, 2016-03-01 07:32:34, 2016-03-01 07:32:35, 2016-03-01… ## $ logger_id <fct> 2300, 2300, 2300, 2400, 2400, 2400, 2400, 2400, 2300, 2300, 2300, 2300, 2300, 2400, 2300, 2400, 2400, 2400, 2400, 24… ## $ species   <chr> \"Mountain Chickadee\", \"Mountain Chickadee\", \"Mountain Chickadee\", \"House Finch\", \"House Finch\", \"House Finch\", \"Hous… ## $ age       <chr> \"AHY\", \"AHY\", \"AHY\", \"SY\", \"SY\", \"SY\", \"SY\", \"SY\", \"AHY\", \"AHY\", \"AHY\", \"AHY\", \"AHY\", \"SY\", \"AHY\", \"SY\", \"SY\", \"SY\",… ## $ sex       <chr> \"U\", \"U\", \"U\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"M\", \"M\", \"M\", \"M\", \"M\", \"F\", \"M\", \"M\", \"… ## $ site_name <chr> \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kamloops, BC\", \"Kam… ## $ lon       <dbl> -120.3622, -120.3622, -120.3622, -120.3635, -120.3635, -120.3635, -120.3635, -120.3635, -120.3622, -120.3622, -120.3… ## $ lat       <dbl> 50.66967, 50.66967, 50.66967, 50.66938, 50.66938, 50.66938, 50.66938, 50.66938, 50.66967, 50.66967, 50.66967, 50.669… ## $ temp      <dbl> 2.396167, 2.397806, 2.424500, 2.508556, 2.508611, 2.508667, 2.508722, 2.508778, 2.520278, 2.520500, 2.522667, 2.5228… ## $ wind_spd  <dbl> 19.00000, 19.00000, 18.51000, 16.82889, 16.82778, 16.82667, 16.82556, 16.82444, 16.59444, 16.59000, 16.54667, 16.542… finches_weather <- finches_weather %>%   group_by(date) %>%   summarize(n = length(time),             temp = mean(temp),             wind_spd = mean(wind_spd))  ggplot(data = finches_weather, aes(x = date, y = n)) +   theme_bw() +   theme(legend.position = \"top\") +   geom_bar(stat = \"identity\") +   geom_line(aes(y = temp * 50, colour = \"Temperature\"), size = 2) +   geom_line(aes(y = wind_spd * 50, colour = \"Wind Speed\"), size = 2) +   scale_colour_discrete(name = \"\") +   scale_y_continuous(     name = \"Activity Counts\",     sec.axis = sec_axis(~. / 50, name = \"Temperature (C) / Wind Speed (km/h)\")) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated."},{"path":"https://docs.ropensci.org/weathercan/articles/normals.html","id":"downloading-climate-normals","dir":"Articles","previous_headings":"","what":"Downloading Climate Normals","title":"Climate Normals","text":"Climate Normals Averages describe average climate conditions specific particular location. can downloaded Environment Climate Change Canada using normals_dl() function. First ’ll load weathercan package downloading data tidyr package unnesting data (see ). download climate normals, ’ll first find stations ’re interested using stations_search() function. ’ll use normals_years = \"current\" argument filter stations available climate normals 1981-2010 year range. Let’s look climate normals station Winnipeg, MB. Note unlike weather_dl() function, normals_dl() function requires climate_id station_id. default normals downloaded years “1981-2010” (currently 1981-2010 1971-2000 year ranges available) two different types climate normals (weather measurements first/last frost dates), data nested two different datasets. can see Airport (Richardson Int’l) 197 average weather measurements/codes well first/last frost dates. can also see station data quality sufficient meet WMO standards temperature precipitation (.e. measurements code >= ). See ECCC calculations document details. extract either data set can use unnest() function tidyr package. Note extracts measurements three stations (case normals data frame), measurements available station visualize missing data can use gg_miss_var() function naniar package. plot chunk unnamed-chunk-7 Let’s take look frost data.","code":"library(weathercan) library(tidyr) library(dplyr) library(naniar) # For exploring missing values stations_search(\"Winnipeg\", normals_years = \"current\") ## # A tibble: 1 × 13 ##   prov  station_name    station_id climate_id WMO_id TC_id   lat   lon  elev tz    normals ##   <chr> <chr>                <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr> <lgl>   ## 1 MB    WINNIPEG RICHA…       3698 5023222     71852 YWG    49.9 -97.2  239. Etc/… TRUE n <- normals_dl(climate_ids = \"5023222\") n ## # A tibble: 1 × 7 ##   prov  station_name                climate_id normals_years meets_wmo normals  frost    ##   <chr> <chr>                       <chr>      <chr>         <lgl>     <list>   <list>   ## 1 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      <tibble> <tibble> normals <- unnest(n, normals) frost <- unnest(n, frost) normals ## # A tibble: 13 × 203 ##    prov  station_name         climate_id normals_years meets_wmo period temp_daily_average ##    <chr> <chr>                <chr>      <chr>         <lgl>     <fct>               <dbl> ##  1 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Jan                 -16.4 ##  2 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Feb                 -13.2 ##  3 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Mar                  -5.8 ##  4 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Apr                   4.4 ##  5 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      May                  11.6 ##  6 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Jun                  17   ##  7 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Jul                  19.7 ##  8 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Aug                  18.8 ##  9 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Sep                  12.7 ## 10 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Oct                   5   ## 11 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Nov                  -4.9 ## 12 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Dec                 -13.2 ## 13 MB    WINNIPEG RICHARDSON… 5023222    1981-2010     TRUE      Year                  3 select(normals, -contains(\"_code\")) %>%  # Remove '_code' columns   gg_miss_var(facet = station_name) suppressWarnings({select(normals, -contains(\"_code\")) %>%  # Remove '_code' columns     gg_miss_var(facet = station_name)}) if(\"normals\" %in% names(frost)) frost <- select(frost, -normals) # tidyr v1 glimpse(frost) ## Rows: 7 ## Columns: 13 ## $ prov                                  <chr> \"MB\", \"MB\", \"MB\", \"MB\", \"MB\", \"MB\", \"MB\" ## $ station_name                          <chr> \"WINNIPEG RICHARDSON INT'L A\", \"WINNIPEG R… ## $ climate_id                            <chr> \"5023222\", \"5023222\", \"5023222\", \"5023222\"… ## $ normals_years                         <chr> \"1981-2010\", \"1981-2010\", \"1981-2010\", \"19… ## $ meets_wmo                             <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE ## $ frost_code                            <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\" ## $ date_first_fall_frost                 <dbl> 265, 265, 265, 265, 265, 265, 265 ## $ date_last_spring_frost                <dbl> 143, 143, 143, 143, 143, 143, 143 ## $ length_frost_free                     <dbl> 121, 121, 121, 121, 121, 121, 121 ## $ prob                                  <chr> \"10%\", \"25%\", \"33%\", \"50%\", \"66%\", \"75%\", … ## $ prob_last_spring_temp_below_0_on_date <dbl> 158, 152, 148, 144, 140, 137, 129 ## $ prob_first_fall_temp_below_0_on_date  <dbl> 255, 259, 261, 265, 268, 270, 276 ## $ prob_length_frost_free                <dbl> 96, 109, 114, 119, 126, 129, 141"},{"path":"https://docs.ropensci.org/weathercan/articles/normals.html","id":"finding-stations-with-specific-measurements","dir":"Articles","previous_headings":"Downloading Climate Normals","what":"Finding stations with specific measurements","title":"Climate Normals","text":"include data frame, normals_measurements contains list stations corresponding measurements. aware data might date! example, wanted climate_ids stations data soil temperature 1981-2010 normals:","code":"normals_measurements ## # A tibble: 307,891 × 5 ##    prov  station_name climate_id normals   measurement             ##    <chr> <chr>        <chr>      <chr>     <chr>                   ##  1 AB    HORBURG      301C3D4    1981-2010 temp_daily_average      ##  2 AB    HORBURG      301C3D4    1981-2010 temp_daily_average_code ##  3 AB    HORBURG      301C3D4    1981-2010 temp_sd                 ##  4 AB    HORBURG      301C3D4    1981-2010 temp_sd_code            ##  5 AB    HORBURG      301C3D4    1981-2010 temp_daily_max          ##  6 AB    HORBURG      301C3D4    1981-2010 temp_daily_max_code     ##  7 AB    HORBURG      301C3D4    1981-2010 temp_daily_min          ##  8 AB    HORBURG      301C3D4    1981-2010 temp_daily_min_code     ##  9 AB    HORBURG      301C3D4    1981-2010 temp_extreme_max        ## 10 AB    HORBURG      301C3D4    1981-2010 temp_extreme_max_code   ## # ℹ 307,881 more rows normals_measurements %>%   filter(stringr::str_detect(measurement, \"soil\"),          normals == \"1981-2010\") %>%   pull(climate_id) %>%   unique() ##  [1] \"3070560\" \"1100119\" \"112G8L1\" \"5021054\" \"5021848\" \"8102234\" \"8403600\" \"8501900\" ##  [9] \"8502800\" \"8202800\" \"8205990\" \"2403500\" \"6073960\" \"6104025\" \"6105976\" \"7040440\" ## [17] \"7042388\" \"4012400\" \"4019035\" \"4028060\" \"4043900\" \"4075518\""},{"path":"https://docs.ropensci.org/weathercan/articles/normals.html","id":"understanding-climate-normals","dir":"Articles","previous_headings":"","what":"Understanding Climate Normals","title":"Climate Normals","text":"measurements contained climate normals specific. better understand calculated please explore following resources: weathercan Climate Normals Codes weathercan Climate Normals Glossary","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/articles/tidyhydat.html","id":"loading-packages","dir":"Articles","previous_headings":"Setup","what":"Loading packages","title":"weathercan and tidyhydat","text":"","code":"library(weathercan) library(tidyhydat) ## Error in library(tidyhydat): there is no package called 'tidyhydat' library(dplyr) library(ggplot2) library(lubridate) library(glue)"},{"path":"https://docs.ropensci.org/weathercan/articles/tidyhydat.html","id":"prep-hydat-data","dir":"Articles","previous_headings":"Setup","what":"Prep HYDAT data","title":"weathercan and tidyhydat","text":"tidyhydat data needs downloaded cached locally order used (Note, can take !)","code":"download_hydat()"},{"path":"https://docs.ropensci.org/weathercan/articles/tidyhydat.html","id":"exploring-climate-and-hydrology","dir":"Articles","previous_headings":"","what":"Exploring climate and hydrology","title":"weathercan and tidyhydat","text":"summer 2020, region (Brandon, Manitoba) experienced incredibly heavy rain fall event. downspout ripped gutter many people area experienced flooding rain poured basements. Let’s take look event captured weather hydrometric stations monitored ECCC. event occurred late June/early July, let’s give two-month range. ’ll find local Brandon weather station daily data range case “” “Airport”, let’s go ! Take quick look: plot chunk unnamed-chunk-7 Yikes! can see downspout came ! Now let’s get HYDAT data compare. First ’ll find local station couple options, whoops, one’s Quebec! Let’s filter Manitoba stations 2020 data hy_stn_data_range() function. Hmm, let’s see kind data available looking included hy_data_types data frame. Great! flow water level data station number “05MH001”, “Assiniboine River Brandon”. Let’s grab flow water level data station.","code":"dates <- c(\"2020-06-01\", \"2020-08-01\") stations_search(\"brandon\", interval = \"day\",                 starts_latest = 2020, ends_earliest = 2020) ## # A tibble: 2 × 16 ##   prov  station_name station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1981_2010 ##   <chr> <chr>             <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             ## 1 MB    BRANDON A         50821 5010481     71140 YBR    49.9 -100.  409. Etc/GMT+6 day       2012  2023 FALSE   FALSE             ## 2 MB    BRANDON RCS       49909 5010490     71136 PBO    49.9 -100.  409. Etc/GMT+6 day       2012  2023 FALSE   FALSE             ## # ℹ 1 more variable: normals_1971_2000 <lgl> rain <- weather_dl(station_ids = 50821, interval = \"day\", start = dates[1], end = dates[2]) ggplot(data = rain, aes(x = date, y = total_rain)) +   theme_bw() +   geom_bar(stat = \"identity\") +   scale_y_continuous(name = \"Total Rain (mm)\", expand = c(0,0)) search_stn_name(\"brandon\") ## Error in search_stn_name(\"brandon\"): could not find function \"search_stn_name\" search_stn_name(\"brandon\") %>%   filter(PROV_TERR_STATE_LOC == \"MB\") %>%   pull(STATION_NUMBER) %>%   hy_stn_data_range() %>%   filter(Year_from <= 2020, Year_to >= 2020) ## Error in hy_stn_data_range(.): could not find function \"hy_stn_data_range\" filter(hy_data_types, DATA_TYPE %in% c(\"H\", \"Q\")) ## Error in eval(expr, envir, enclos): object 'hy_data_types' not found flow <- hy_daily_flows(station_number = \"05MH001\",                        start_date = dates[1], end_date = dates[2]) ## Error in hy_daily_flows(station_number = \"05MH001\", start_date = dates[1], : could not find function \"hy_daily_flows\" level <- hy_daily_levels(station_number = \"05MH001\",                          start_date = dates[1], end_date = dates[2]) ## Error in hy_daily_levels(station_number = \"05MH001\", start_date = dates[1], : could not find function \"hy_daily_levels\""},{"path":"https://docs.ropensci.org/weathercan/articles/tidyhydat.html","id":"ploting-rain-and-flow","dir":"Articles","previous_headings":"Exploring climate and hydrology","what":"Ploting rain and flow","title":"weathercan and tidyhydat","text":"Interesting, looks like ’s bit lag rain event dramatic increase water flow Assiniboine (unsurprisingly, called “lag peak”). Let’s add bit information lag peak. can expect lag like much flow captured Brandon HYDAT station precipitation upstream catchment area (local contributions), takes time travel.","code":"g <- ggplot() +   theme_bw() +   theme(axis.title.x = element_blank()) +   geom_bar(data = rain, aes(x = date, y = (total_rain * 2)), stat = \"identity\",            alpha = 0.7, fill = \"cornflowerblue\") +   geom_line(data = flow, aes(x = Date, y = Value)) +   scale_y_continuous(name = bquote(Total~Flow~(m^3/s)), expand = c(0, 0),                      limits = c(0, max(flow$Value * 1.1)),                      sec.axis = sec_axis(trans = ~ . / 2, name = \"Total Rain (mm)\")) ## Error in eval(expr, envir, enclos): object 'flow' not found g ## Error in eval(expr, envir, enclos): object 'g' not found d <- data.frame(dates = c(rain$date[which.max(rain$total_precip)],                           flow$Date[which.max(flow$Value)]),                 y = max(flow$Value) + 5) ## Error in eval(expr, envir, enclos): object 'flow' not found g +   geom_path(data = d, aes(x = dates, y = y),               arrow = arrow(length = unit(0.25, \"lines\"), ends = \"both\", type = \"closed\")) +   annotate(geom = \"text\",            x = d$dates[1] + (d$dates[2] - d$dates[1])/2,            y = d$y[1] + 10,            label = glue(\"{d$dates[2] - d$dates[1]}-day delay\")) ## Error in eval(expr, envir, enclos): object 'g' not found"},{"path":"https://docs.ropensci.org/weathercan/articles/tidyhydat.html","id":"ploting-rain-and-water-level","dir":"Articles","previous_headings":"Exploring climate and hydrology","what":"Ploting rain and water level","title":"weathercan and tidyhydat","text":"looks lag, let’s see ’s .","code":"g <- ggplot() +   theme_bw() +   theme(axis.title.x = element_blank()) +   geom_bar(data = rain,            aes(x = date, y = (total_rain/65) + min(level$Value)),            stat = \"identity\", alpha = 0.7, fill = \"cornflowerblue\") +   geom_line(data = level, aes(x = Date, y = Value)) +   scale_y_continuous(name = \"Water Level (m)\", expand = c(0, 0),                      sec.axis = sec_axis(trans = ~ (. - min(level$Value)) * 65,                                          name = \"Total Rain (mm)\")) +   coord_cartesian(ylim = c(min(level$Value), max(level$Value)*1.001)) ## Error in eval(expr, envir, enclos): object 'level' not found g ## Error in eval(expr, envir, enclos): object 'g' not found d <- data.frame(dates = c(rain$date[which.max(rain$total_precip)],                           level$Date[which.max(level$Value)]),                 y = max(level$Value)*1.00025) ## Error in eval(expr, envir, enclos): object 'level' not found g +   geom_path(data = d, aes(x = dates, y = y),               arrow = arrow(length = unit(0.25, \"lines\"), ends = \"both\", type = \"closed\")) +   annotate(geom = \"text\",            x = d$dates[1] + (d$dates[2] - d$dates[1])/2,            y = d$y[1] * 1.0002,            label = glue(\"{d$dates[2] - d$dates[1]}-day delay\")) ## Error in eval(expr, envir, enclos): object 'g' not found"},{"path":"https://docs.ropensci.org/weathercan/articles/tidyhydat.html","id":"ploting-flow-and-water-level","dir":"Articles","previous_headings":"Exploring climate and hydrology","what":"Ploting flow and water level","title":"weathercan and tidyhydat","text":"Looks like flow water level match , perhaps take closer look. Almost perfect match water level flow (makes sense). Hopefully short article gives sense might combine different types ECCC data gathered via different R packages comprehensive look world around.","code":"ggplot() +   theme_bw() +   theme(legend.position = c(0.8, 0.8)) +   geom_line(data = flow, aes(x = Date, y = Value, colour = \"Flow\"),             size = 2) +   geom_line(data = level, size = 1,             aes(x = Date, y = (Value - min(Value) + 0.1) * 130, colour = \"Level\")) +   scale_y_continuous(bquote(Total~Flow~(m^3/s)), expand = c(0, 0),                      sec.axis = sec_axis(trans = ~ ./130 + min(level$Value) - 0.1,                                          name = \"Water Level (m)\")) +   scale_colour_manual(name = \"Type\",                       values = c(\"Flow\" = \"cornflowerblue\",                                  \"Level\" = \"grey30\")) ## Warning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2 3.5.0. ## ℹ Please use the `legend.position.inside` argument of `theme()` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. ## Error in eval(expr, envir, enclos): object 'flow' not found"},{"path":"https://docs.ropensci.org/weathercan/articles/weathercan.html","id":"stations","dir":"Articles","previous_headings":"","what":"Stations","title":"Getting Started","text":"weathercan includes function stations() returns list stations details (including station_id). can look data frame directly, can use stations_search function: can narrow search specifying time intervals (options “hour”, “day”, “month”): can specify one interval: can also search proximity. results include new column distance specifying distance km coordinates: can also perform complex searches using filter() function dplyr package direction data returned stations(): can update list stations check last updated ","code":"head(stations()) ## # A tibble: 6 × 16 ##   prov  station_name        station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1981_2010 normals_1971_2000 ##   <chr> <chr>                    <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ## 1 AB    DAYSLAND                  1795 301AR54        NA <NA>   52.9 -112.  689. Etc/GMT+7 day       1908  1922 FALSE   FALSE             FALSE             ## 2 AB    DAYSLAND                  1795 301AR54        NA <NA>   52.9 -112.  689. Etc/GMT+7 hour        NA    NA FALSE   FALSE             FALSE             ## 3 AB    DAYSLAND                  1795 301AR54        NA <NA>   52.9 -112.  689. Etc/GMT+7 month     1908  1922 FALSE   FALSE             FALSE             ## 4 AB    EDMONTON CORONATION       1796 301BK03        NA <NA>   53.6 -114.  671. Etc/GMT+7 day       1978  1979 FALSE   FALSE             FALSE             ## 5 AB    EDMONTON CORONATION       1796 301BK03        NA <NA>   53.6 -114.  671. Etc/GMT+7 hour        NA    NA FALSE   FALSE             FALSE             ## 6 AB    EDMONTON CORONATION       1796 301BK03        NA <NA>   53.6 -114.  671. Etc/GMT+7 month     1978  1979 FALSE   FALSE             FALSE glimpse(stations()) ## Rows: 26,382 ## Columns: 16 ## $ prov              <chr> \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", … ## $ station_name      <chr> \"DAYSLAND\", \"DAYSLAND\", \"DAYSLAND\", \"EDMONTON CORONATION\", \"EDMONTON CORONATION\", \"EDMONTON CORONATION\", \"FLEET\", \"FLEET\", \"FLEET\", … ## $ station_id        <dbl> 1795, 1795, 1795, 1796, 1796, 1796, 1797, 1797, 1797, 1798, 1798, 1798, 1799, 1799, 1799, 1800, 1800, 1800, 1801, 1801, 1801, 1802, … ## $ climate_id        <chr> \"301AR54\", \"301AR54\", \"301AR54\", \"301BK03\", \"301BK03\", \"301BK03\", \"301B6L0\", \"301B6L0\", \"301B6L0\", \"301B8LR\", \"301B8LR\", \"301B8LR\", … ## $ WMO_id            <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ TC_id             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ lat               <dbl> 52.87, 52.87, 52.87, 53.57, 53.57, 53.57, 52.15, 52.15, 52.15, 53.20, 53.20, 53.20, 52.40, 52.40, 52.40, 54.08, 54.08, 54.08, 53.52,… ## $ lon               <dbl> -112.28, -112.28, -112.28, -113.57, -113.57, -113.57, -111.73, -111.73, -111.73, -110.15, -110.15, -110.15, -115.20, -115.20, -115.2… ## $ elev              <dbl> 688.8, 688.8, 688.8, 670.6, 670.6, 670.6, 838.2, 838.2, 838.2, 640.0, 640.0, 640.0, 1036.0, 1036.0, 1036.0, 585.2, 585.2, 585.2, 668… ## $ tz                <chr> \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"E… ## $ interval          <chr> \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour… ## $ start             <dbl> 1908, NA, 1908, 1978, NA, 1978, 1987, NA, 1987, 1987, NA, 1987, 1980, NA, 1980, 1980, NA, 1980, 1986, NA, 1986, 1987, NA, 1987, 1986… ## $ end               <dbl> 1922, NA, 1922, 1979, NA, 1979, 1990, NA, 1990, 1998, NA, 1998, 2009, NA, 2007, 1981, NA, 1981, 2019, NA, 2007, 1991, NA, 1991, 1995… ## $ normals           <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRU… ## $ normals_1981_2010 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRU… ## $ normals_1971_2000 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… stations_search(\"Kamloops\") ## # A tibble: 40 × 16 ##    prov  station_name         station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1981_2010 normals_1971_2000 ##    <chr> <chr>                     <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ##  1 BC    KAMLOOPS                   1274 1163779        NA <NA>   50.7 -120.  379. Etc/GMT+8 day       1878  1982 FALSE   FALSE             FALSE             ##  2 BC    KAMLOOPS                   1274 1163779        NA <NA>   50.7 -120.  379. Etc/GMT+8 month     1878  1982 FALSE   FALSE             FALSE             ##  3 BC    KAMLOOPS A                 1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 day       1951  2013 TRUE    TRUE              TRUE              ##  4 BC    KAMLOOPS A                 1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      1953  2013 TRUE    TRUE              TRUE              ##  5 BC    KAMLOOPS A                 1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 month     1951  2013 TRUE    TRUE              TRUE              ##  6 BC    KAMLOOPS A                51423 1163781     71887 YKA    50.7 -120.  345. Etc/GMT+8 day       2013  2023 FALSE   FALSE             FALSE             ##  7 BC    KAMLOOPS A                51423 1163781     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      2013  2023 FALSE   FALSE             FALSE             ##  8 BC    KAMLOOPS AFTON MINES       1276 1163790        NA <NA>   50.7 -120.  701  Etc/GMT+8 day       1977  1993 FALSE   FALSE             TRUE              ##  9 BC    KAMLOOPS AFTON MINES       1276 1163790        NA <NA>   50.7 -120.  701  Etc/GMT+8 month     1977  1993 FALSE   FALSE             TRUE              ## 10 BC    KAMLOOPS AUT              42203 1163842     71741 ZKA    50.7 -120.  345  Etc/GMT+8 day       2006  2023 FALSE   FALSE             FALSE             ## # ℹ 30 more rows stations_search(\"Kamloops\", interval = \"hour\") ## # A tibble: 3 × 16 ##   prov  station_name station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1981_2010 normals_1971_2000 ##   <chr> <chr>             <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ## 1 BC    KAMLOOPS A         1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      1953  2013 TRUE    TRUE              TRUE              ## 2 BC    KAMLOOPS A        51423 1163781     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      2013  2023 FALSE   FALSE             FALSE             ## 3 BC    KAMLOOPS AUT      42203 1163842     71741 ZKA    50.7 -120.  345  Etc/GMT+8 hour      2006  2023 FALSE   FALSE             FALSE stations_search(\"Kamloops\", interval = c(\"hour\", \"month\")) ## # A tibble: 21 × 16 ##    prov  station_name            station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1981_2010 normals_1971_2000 ##    <chr> <chr>                        <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ##  1 BC    KAMLOOPS                      1274 1163779        NA <NA>   50.7 -120.  379. Etc/GMT+8 month     1878  1982 FALSE   FALSE             FALSE             ##  2 BC    KAMLOOPS A                    1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      1953  2013 TRUE    TRUE              TRUE              ##  3 BC    KAMLOOPS A                    1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 month     1951  2013 TRUE    TRUE              TRUE              ##  4 BC    KAMLOOPS A                   51423 1163781     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      2013  2023 FALSE   FALSE             FALSE             ##  5 BC    KAMLOOPS AFTON MINES          1276 1163790        NA <NA>   50.7 -120.  701  Etc/GMT+8 month     1977  1993 FALSE   FALSE             TRUE              ##  6 BC    KAMLOOPS AUT                 42203 1163842     71741 ZKA    50.7 -120.  345  Etc/GMT+8 hour      2006  2023 FALSE   FALSE             FALSE             ##  7 BC    KAMLOOPS AUT                 42203 1163842     71741 ZKA    50.7 -120.  345  Etc/GMT+8 month     2006  2006 FALSE   FALSE             FALSE             ##  8 BC    KAMLOOPS CDA                  1277 1163810        NA <NA>   50.7 -120.  345  Etc/GMT+8 month     1949  1977 FALSE   FALSE             FALSE             ##  9 BC    KAMLOOPS CHERRY CREEK         1278 1163814        NA <NA>   50.7 -121.  556. Etc/GMT+8 month     1970  1974 FALSE   FALSE             FALSE             ## 10 BC    KAMLOOPS CHERRY CREEK 2       1279 1163815        NA <NA>   50.6 -121.  701  Etc/GMT+8 month     1974  1977 FALSE   FALSE             FALSE             ## # ℹ 11 more rows stations_search(coords = c(50.667492, -120.329049), dist = 20, interval = \"hour\") ## # A tibble: 3 × 17 ##   prov  station_name station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1981_2010 normals_1971_2000 distance ##   <chr> <chr>             <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>                <dbl> ## 1 BC    KAMLOOPS A         1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      1953  2013 TRUE    TRUE              TRUE                  8.61 ## 2 BC    KAMLOOPS AUT      42203 1163842     71741 ZKA    50.7 -120.  345  Etc/GMT+8 hour      2006  2023 FALSE   FALSE             FALSE                 8.61 ## 3 BC    KAMLOOPS A        51423 1163781     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      2013  2023 FALSE   FALSE             FALSE                 9.26 BCstations <- stations() %>%   filter(prov %in% c(\"BC\")) %>%   filter(interval == \"hour\") %>%   filter(lat > 49 & lat < 49.5) %>%   filter(lon > -119 & lon < -116) %>%   filter(start <= 2002) %>%   filter(end >= 2016) BCstations ## # A tibble: 3 × 16 ##   prov  station_name                station_id climate_id WMO_id TC_id   lat   lon  elev tz     interval start   end normals normals_1981_2010 normals_1971_2000 ##   <chr> <chr>                            <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>  <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ## 1 BC    CRESTON CAMPBELL SCIENTIFIC       6838 114B1F0     71770 WJR    49.1 -116.  641. Etc/G… hour      1994  2023 FALSE   FALSE             FALSE             ## 2 BC    NELSON CS                         6839 1145M29     71776 WNM    49.5 -117.  535. Etc/G… hour      1994  2023 FALSE   FALSE             FALSE             ## 3 BC    WARFIELD RCS                     31067 1148705     71401 XWF    49.1 -118.  567. Etc/G… hour      2001  2023 FALSE   FALSE             FALSE ## weather_dl() accepts numbers so we can create a vector to input into weather: stn_vector <- BCstations$station_id stn_vector ## [1]  6838  6839 31067 stations_dl() stations_meta() ## $ECCC_modified ## [1] \"2023-01-24 23:30:00 UTC\" ##  ## $weathercan_modified ## [1] \"2024-11-08\""},{"path":"https://docs.ropensci.org/weathercan/articles/weathercan.html","id":"weather","dir":"Articles","previous_headings":"","what":"Weather","title":"Getting Started","text":"station_id(s) can download weather data: can also download data multiple stations : plot : plot chunk unnamed-chunk-12 can use vector created : information data flags, see Flags vignette, information units terms, see Terms Units vignette.","code":"kam <- weather_dl(station_ids = 51423, start = \"2016-01-01\", end = \"2016-02-15\") ## As of weathercan v0.3.0 time display is either local time or UTC ## See Details under ?weather_dl for more information. ## This message is shown once per session kam ## # A tibble: 1,104 × 37 ##    station_name station_id station_operator prov    lat   lon  elev climate_id WMO_id TC_id date       time                year  month day   hour  weather  hmdx ##    <chr>             <dbl> <lgl>            <chr> <dbl> <dbl> <dbl> <chr>      <chr>  <chr> <date>     <dttm>              <chr> <chr> <chr> <chr> <chr>   <dbl> ##  1 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 00:00:00 2016  01    01    00:00 <NA>       NA ##  2 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 01:00:00 2016  01    01    01:00 Mostly…    NA ##  3 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 02:00:00 2016  01    01    02:00 <NA>       NA ##  4 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 03:00:00 2016  01    01    03:00 <NA>       NA ##  5 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 04:00:00 2016  01    01    04:00 Cloudy     NA ##  6 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 05:00:00 2016  01    01    05:00 <NA>       NA ##  7 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 06:00:00 2016  01    01    06:00 <NA>       NA ##  8 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 07:00:00 2016  01    01    07:00 Cloudy     NA ##  9 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 08:00:00 2016  01    01    08:00 <NA>       NA ## 10 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2016-01-01 2016-01-01 09:00:00 2016  01    01    09:00 Snow       NA ## # ℹ 1,094 more rows ## # ℹ 19 more variables: hmdx_flag <chr>, precip_amt <dbl>, precip_amt_flag <chr>, pressure <dbl>, pressure_flag <chr>, rel_hum <dbl>, rel_hum_flag <chr>, ## #   temp <dbl>, temp_dew <dbl>, temp_dew_flag <chr>, temp_flag <chr>, visib <dbl>, visib_flag <chr>, wind_chill <dbl>, wind_chill_flag <chr>, wind_dir <dbl>, ## #   wind_dir_flag <chr>, wind_spd <dbl>, wind_spd_flag <chr> kam.pg <- weather_dl(station_ids = c(48248, 51423), start = \"2016-01-01\", end = \"2016-02-15\")  kam.pg ## # A tibble: 2,208 × 37 ##    station_name station_id station_operator prov    lat   lon  elev climate_id WMO_id TC_id date       time                year  month day   hour  weather  hmdx ##    <chr>             <dbl> <lgl>            <chr> <dbl> <dbl> <dbl> <chr>      <chr>  <chr> <date>     <dttm>              <chr> <chr> <chr> <chr> <chr>   <dbl> ##  1 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 00:00:00 2016  01    01    00:00 <NA>       NA ##  2 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 01:00:00 2016  01    01    01:00 <NA>       NA ##  3 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 02:00:00 2016  01    01    02:00 <NA>       NA ##  4 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 03:00:00 2016  01    01    03:00 <NA>       NA ##  5 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 04:00:00 2016  01    01    04:00 <NA>       NA ##  6 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 05:00:00 2016  01    01    05:00 <NA>       NA ##  7 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 06:00:00 2016  01    01    06:00 <NA>       NA ##  8 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 07:00:00 2016  01    01    07:00 <NA>       NA ##  9 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 08:00:00 2016  01    01    08:00 <NA>       NA ## 10 PRINCE GEOR…      48248 NA               BC     53.9 -123.   680 1096453    71302  VXS   2016-01-01 2016-01-01 09:00:00 2016  01    01    09:00 <NA>       NA ## # ℹ 2,198 more rows ## # ℹ 19 more variables: hmdx_flag <chr>, precip_amt <dbl>, precip_amt_flag <chr>, pressure <dbl>, pressure_flag <chr>, rel_hum <dbl>, rel_hum_flag <chr>, ## #   temp <dbl>, temp_dew <dbl>, temp_dew_flag <chr>, temp_flag <chr>, visib <dbl>, visib_flag <chr>, wind_chill <dbl>, wind_chill_flag <chr>, wind_dir <dbl>, ## #   wind_dir_flag <chr>, wind_spd <dbl>, wind_spd_flag <chr> ggplot(data = kam.pg, aes(x = time, y = temp, group = station_name, colour = station_name)) +   theme(legend.position = \"top\") +   geom_line() +   theme_minimal() stn_vec_df <- weather_dl(station_ids = stn_vector, start = \"2016-01-01\", end = \"2016-02-15\")  stn_vec_df ## # A tibble: 3,312 × 37 ##    station_name station_id station_operator prov    lat   lon  elev climate_id WMO_id TC_id date       time                year  month day   hour  weather  hmdx ##    <chr>             <dbl> <lgl>            <chr> <dbl> <dbl> <dbl> <chr>      <chr>  <chr> <date>     <dttm>              <chr> <chr> <chr> <chr> <chr>   <dbl> ##  1 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 00:00:00 2016  01    01    00:00 <NA>       NA ##  2 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 01:00:00 2016  01    01    01:00 <NA>       NA ##  3 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 02:00:00 2016  01    01    02:00 <NA>       NA ##  4 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 03:00:00 2016  01    01    03:00 <NA>       NA ##  5 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 04:00:00 2016  01    01    04:00 <NA>       NA ##  6 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 05:00:00 2016  01    01    05:00 <NA>       NA ##  7 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 06:00:00 2016  01    01    06:00 <NA>       NA ##  8 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 07:00:00 2016  01    01    07:00 <NA>       NA ##  9 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 08:00:00 2016  01    01    08:00 <NA>       NA ## 10 CRESTON CAM…       6838 NA               BC     49.1 -116.  641. 114B1F0    71770  WJR   2016-01-01 2016-01-01 09:00:00 2016  01    01    09:00 <NA>       NA ## # ℹ 3,302 more rows ## # ℹ 19 more variables: hmdx_flag <chr>, precip_amt <dbl>, precip_amt_flag <chr>, pressure <dbl>, pressure_flag <chr>, rel_hum <dbl>, rel_hum_flag <chr>, ## #   temp <dbl>, temp_dew <dbl>, temp_dew_flag <chr>, temp_flag <chr>, visib <dbl>, visib_flag <chr>, wind_chill <dbl>, wind_chill_flag <chr>, wind_dir <dbl>, ## #   wind_dir_flag <chr>, wind_spd <dbl>, wind_spd_flag <chr>"},{"path":"https://docs.ropensci.org/weathercan/articles/weathercan.html","id":"climate-normals","dir":"Articles","previous_headings":"","what":"Climate Normals","title":"Getting Started","text":"access climate normals, first need know climate_id associated station ’re interested . current year range 1981-2010, can also search stations previous year range: Note Winnipeg station normals year ranges. can download climate normals normals_dl() function. two parts normals data, average weather measurements average frost dates. Alternatively, download 1971-2000 normals:","code":"stations_search(\"Winnipeg\", normals_years = \"current\") ## # A tibble: 1 × 13 ##   prov  station_name                station_id climate_id WMO_id TC_id   lat   lon  elev tz        normals normals_1981_2010 normals_1971_2000 ##   <chr> <chr>                            <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <lgl>   <lgl>             <lgl>             ## 1 MB    WINNIPEG RICHARDSON INT'L A       3698 5023222     71852 YWG    49.9 -97.2  239. Etc/GMT+6 TRUE    TRUE              TRUE stations_search(\"Winnipeg\", normals_years = \"1971-2000\") ## # A tibble: 1 × 13 ##   prov  station_name                station_id climate_id WMO_id TC_id   lat   lon  elev tz        normals normals_1981_2010 normals_1971_2000 ##   <chr> <chr>                            <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <lgl>   <lgl>             <lgl>             ## 1 MB    WINNIPEG RICHARDSON INT'L A       3698 5023222     71852 YWG    49.9 -97.2  239. Etc/GMT+6 TRUE    TRUE              TRUE n <- normals_dl(\"5023222\") ## Warning: There were 2 warnings in `dplyr::mutate()`. ## The first warning was: ## ℹ In argument: `frost = purrr::map2(...)`. ## Caused by warning: ## ! 21 parsing failures. ## row col  expected     actual         file ##   4  -- 3 columns 15 columns literal data ##   5  -- 3 columns 15 columns literal data ##   6  -- 3 columns 15 columns literal data ##   7  -- 3 columns 15 columns literal data ##   8  -- 3 columns 15 columns literal data ## ... ... ......... .......... ............ ## See problems(...) for more details. ## ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. library(tidyr) unnest(n, normals) ## # A tibble: 13 × 203 ##    prov  station_name                climate_id normals_years meets_wmo period temp_daily_average temp_daily_average_code temp_sd temp_sd_code temp_daily_max ##    <chr> <chr>                       <chr>      <chr>         <lgl>     <fct>               <dbl> <chr>                     <dbl> <chr>                 <dbl> ##  1 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Jan                 -16.4 A                           4.1 A                     -11.3 ##  2 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Feb                 -13.2 A                           4.2 A                      -8.1 ##  3 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Mar                  -5.8 A                           3.1 A                      -0.8 ##  4 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Apr                   4.4 A                           2.7 A                      10.9 ##  5 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      May                  11.6 A                           2.1 A                      18.6 ##  6 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Jun                  17   A                           2   A                      23.2 ##  7 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Jul                  19.7 A                           1.4 A                      25.9 ##  8 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Aug                  18.8 A                           1.9 A                      25.4 ##  9 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Sep                  12.7 A                           1.3 A                      19   ## 10 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Oct                   5   A                           1.8 A                      10.5 ## 11 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Nov                  -4.9 A                           3.6 A                      -0.5 ## 12 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Dec                 -13.2 A                           4.4 A                      -8.5 ## 13 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      Year                  3   A                           1.2 A                       8.7 ## # ℹ 192 more variables: temp_daily_max_code <chr>, temp_daily_min <dbl>, temp_daily_min_code <chr>, temp_extreme_max <dbl>, temp_extreme_max_code <chr>, ## #   temp_extreme_max_date <date>, temp_extreme_max_date_code <chr>, temp_extreme_min <dbl>, temp_extreme_min_code <chr>, temp_extreme_min_date <date>, ## #   temp_extreme_min_date_code <chr>, rain <dbl>, rain_code <chr>, snow <dbl>, snow_code <chr>, precip <dbl>, precip_code <chr>, snow_mean_depth <dbl>, ## #   snow_mean_depth_code <chr>, snow_median_depth <dbl>, snow_median_depth_code <chr>, snow_depth_month_end <dbl>, snow_depth_month_end_code <chr>, ## #   rain_extreme_daily <dbl>, rain_extreme_daily_code <chr>, rain_extreme_daily_date <date>, rain_extreme_daily_date_code <chr>, snow_extreme_daily <dbl>, ## #   snow_extreme_daily_code <chr>, snow_extreme_daily_date <date>, snow_extreme_daily_date_code <chr>, precip_extreme_daily <dbl>, ## #   precip_extreme_daily_code <chr>, precip_extreme_daily_date <date>, precip_extreme_daily_date_code <chr>, snow_extreme_depth <dbl>, … unnest(n, frost) ## # A tibble: 6 × 32 ##   prov  station_name                climate_id normals_years meets_wmo normals  frost_code date_first_fall_frost date_last_spring_frost length_frost_free ##   <chr> <chr>                       <chr>      <chr>         <lgl>     <list>   <chr>                      <dbl>                  <dbl>             <dbl> ## 1 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      <tibble> A                            265                    143               121 ## 2 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      <tibble> A                            265                    143               121 ## 3 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      <tibble> A                            265                    143               121 ## 4 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      <tibble> <NA>                          NA                     NA                NA ## 5 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      <tibble> <NA>                          NA                     NA                NA ## 6 MB    WINNIPEG RICHARDSON INT'L A 5023222    1981-2010     TRUE      <tibble> <NA>                          NA                     NA                NA ## # ℹ 22 more variables: `Probability of first temperature in fall <= 0C, on or before indicated date (10%)` <dbl>, ## #   `Probability of first temperature in fall <= 0C, on or before indicated date (25%)` <dbl>, ## #   `Probability of first temperature in fall <= 0C, on or before indicated date (33%)` <dbl>, ## #   `Probability of first temperature in fall <= 0C, on or before indicated date (50%)` <dbl>, ## #   `Probability of first temperature in fall <= 0C, on or before indicated date (66%)` <dbl>, ## #   `Probability of first temperature in fall <= 0C, on or before indicated date (75%)` <dbl>, ## #   `Probability of first temperature in fall <= 0C, on or before indicated date (90%)` <dbl>, … n <- normals_dl(\"5023222\", normals_years = \"1971-2000\") unnest(n, normals) ## # A tibble: 13 × 229 ##    prov  station_name                climate_id normals_years meets_wmo period temp_daily_average temp_daily_average_code temp_sd temp_sd_code temp_daily_max ##    <chr> <chr>                       <chr>      <chr>         <lgl>     <fct>               <dbl> <chr>                     <dbl> <chr>                 <dbl> ##  1 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Jan                 -17.8 A                           3.9 A                     -12.7 ##  2 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Feb                 -13.6 A                           4.2 A                      -8.5 ##  3 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Mar                  -6.1 A                           3.5 A                      -1.1 ##  4 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Apr                   4   A                           2.7 A                      10.3 ##  5 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      May                  12   A                           2.5 A                      19.2 ##  6 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Jun                  17   A                           1.8 A                      23.3 ##  7 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Jul                  19.5 A                           1.5 A                      25.8 ##  8 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Aug                  18.5 A                           1.8 A                      25   ##  9 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Sep                  12.3 A                           1.4 A                      18.6 ## 10 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Oct                   5.3 A                           1.6 A                      10.8 ## 11 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Nov                  -5.3 A                           3.3 A                      -0.9 ## 12 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Dec                 -14.4 A                           4.2 A                      -9.7 ## 13 MB    WINNIPEG RICHARDSON INT'L A 5023222    1971-2000     TRUE      Year                  2.6 A                           1.3 A                       8.3 ## # ℹ 218 more variables: temp_daily_max_code <chr>, temp_daily_min <dbl>, temp_daily_min_code <chr>, temp_extreme_max <dbl>, temp_extreme_max_code <chr>, ## #   temp_extreme_max_date <date>, temp_extreme_max_date_code <chr>, temp_extreme_min <dbl>, temp_extreme_min_code <chr>, temp_extreme_min_date <date>, ## #   temp_extreme_min_date_code <chr>, rain <dbl>, rain_code <chr>, snow <dbl>, snow_code <chr>, precip <dbl>, precip_code <chr>, snow_mean_depth <dbl>, ## #   snow_mean_depth_code <chr>, snow_median_depth <dbl>, snow_median_depth_code <chr>, snow_depth_month_end <dbl>, snow_depth_month_end_code <chr>, ## #   rain_extreme_daily <dbl>, rain_extreme_daily_code <chr>, rain_extreme_daily_date <date>, rain_extreme_daily_date_code <chr>, snow_extreme_daily <dbl>, ## #   snow_extreme_daily_code <chr>, snow_extreme_daily_date <date>, snow_extreme_daily_date_code <chr>, precip_extreme_daily <dbl>, ## #   precip_extreme_daily_code <chr>, precip_extreme_daily_date <date>, precip_extreme_daily_date_code <chr>, snow_extreme_depth <dbl>, … unnest(n, frost) ## # A tibble: 0 × 6 ## # ℹ 6 variables: prov <chr>, station_name <chr>, climate_id <chr>, normals_years <chr>, meets_wmo <lgl>, normals <list>"},{"path":"https://docs.ropensci.org/weathercan/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steffi LaZerte. Author, maintainer. Sam Albers. Contributor. Nick Brown. Contributor. Kevin Cazelles. Contributor. Shandiya Balasubramaniam. Contributor. Mark Ciechanowski. Contributor. Jeremy Selva. Contributor. Kelli Johnson. Contributor.","code":""},{"path":"https://docs.ropensci.org/weathercan/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"LaZerte, Stefanie E Sam Albers (2018). weathercan: Download format weather data Environment Climate Change Canada. Journal Open Source Software 3(22):571. doi:10.21105/joss.00571.","code":"@Article{,   title = {{weathercan}: {D}ownload and format weather data from Environment and Climate Change Canada},   author = {Stefanie E LaZerte and Sam Albers},   journal = {The Journal of Open Source Software},   volume = {3},   number = {22},   pages = {571},   year = {2018},   url = {https://joss.theoj.org/papers/10.21105/joss.00571}, }"},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"weathercan-","dir":"","previous_headings":"","what":"Download Weather Data from Environment and Climate Change Canada","title":"Download Weather Data from Environment and Climate Change Canada","text":"package makes easier search download multiple months/years historical weather data Environment Climate Change Canada (ECCC) website. Bear mind downloads can fairly large performing multiple downloads may use ECCC’s bandwidth unnecessarily. Try stick need. details tutorials checkout weathercan website (see development docs) Check Demo weathercan shiny dashboard (html; source)","code":""},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Weather Data from Environment and Climate Change Canada","text":"can install weathercan rOpenSci r-Universe: View available vignettes vignette(package = \"weathercan\") View particular vignette , example, vignette(\"weathercan\", package = \"weathercan\")","code":"install.packages(\"weathercan\",                   repos = c(\"https://ropensci.r-universe.dev\",                             \"https://cloud.r-project.org\"))"},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"general-usage","dir":"","previous_headings":"","what":"General usage","title":"Download Weather Data from Environment and Climate Change Canada","text":"download data, first need know station_id associated station ’re interested .","code":""},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"stations","dir":"","previous_headings":"General usage","what":"Stations","title":"Download Weather Data from Environment and Climate Change Canada","text":"weathercan includes function stations() returns list stations details (including station_id). can look data frame directly, can use stations_search function: Time frame must one “hour”, “day”, “month”. can also search proximity: can update list stations check last updated Note: reproducibility, using stations list gather data, can good idea take note ECCC date modification include reports/manuscripts.","code":"head(stations()) ## # A tibble: 6 × 17 ##   prov  station_name        station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1991_2020 normals_1981_2010 ##   <chr> <chr>                    <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ## 1 AB    DAYSLAND                  1795 301AR54        NA <NA>   52.9 -112.  689. Etc/GMT+7 day       1908  1922 FALSE   FALSE             FALSE             ## 2 AB    DAYSLAND                  1795 301AR54        NA <NA>   52.9 -112.  689. Etc/GMT+7 hour        NA    NA FALSE   FALSE             FALSE             ## 3 AB    DAYSLAND                  1795 301AR54        NA <NA>   52.9 -112.  689. Etc/GMT+7 month     1908  1922 FALSE   FALSE             FALSE             ## 4 AB    EDMONTON CORONATION       1796 301BK03        NA <NA>   53.6 -114.  671. Etc/GMT+7 day       1978  1979 FALSE   FALSE             FALSE             ## 5 AB    EDMONTON CORONATION       1796 301BK03        NA <NA>   53.6 -114.  671. Etc/GMT+7 hour        NA    NA FALSE   FALSE             FALSE             ## 6 AB    EDMONTON CORONATION       1796 301BK03        NA <NA>   53.6 -114.  671. Etc/GMT+7 month     1978  1979 FALSE   FALSE             FALSE             ## # ℹ 1 more variable: normals_1971_2000 <lgl> glimpse(stations()) ## Rows: 26,382 ## Columns: 17 ## $ prov              <chr> \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", \"AB\", … ## $ station_name      <chr> \"DAYSLAND\", \"DAYSLAND\", \"DAYSLAND\", \"EDMONTON CORONATION\", \"EDMONTON CORONATION\", \"EDMONTON CORONATION\", \"FLEET\", \"FLEET\", \"FLEET\", … ## $ station_id        <dbl> 1795, 1795, 1795, 1796, 1796, 1796, 1797, 1797, 1797, 1798, 1798, 1798, 1799, 1799, 1799, 1800, 1800, 1800, 1801, 1801, 1801, 1802, … ## $ climate_id        <chr> \"301AR54\", \"301AR54\", \"301AR54\", \"301BK03\", \"301BK03\", \"301BK03\", \"301B6L0\", \"301B6L0\", \"301B6L0\", \"301B8LR\", \"301B8LR\", \"301B8LR\", … ## $ WMO_id            <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ TC_id             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ lat               <dbl> 52.87, 52.87, 52.87, 53.57, 53.57, 53.57, 52.15, 52.15, 52.15, 53.20, 53.20, 53.20, 52.40, 52.40, 52.40, 54.08, 54.08, 54.08, 53.52,… ## $ lon               <dbl> -112.28, -112.28, -112.28, -113.57, -113.57, -113.57, -111.73, -111.73, -111.73, -110.15, -110.15, -110.15, -115.20, -115.20, -115.2… ## $ elev              <dbl> 688.8, 688.8, 688.8, 670.6, 670.6, 670.6, 838.2, 838.2, 838.2, 640.0, 640.0, 640.0, 1036.0, 1036.0, 1036.0, 585.2, 585.2, 585.2, 668… ## $ tz                <chr> \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"Etc/GMT+7\", \"E… ## $ interval          <chr> \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour\", \"month\", \"day\", \"hour… ## $ start             <dbl> 1908, NA, 1908, 1978, NA, 1978, 1987, NA, 1987, 1987, NA, 1987, 1980, NA, 1980, 1980, NA, 1980, 1986, NA, 1986, 1987, NA, 1987, 1986… ## $ end               <dbl> 1922, NA, 1922, 1979, NA, 1979, 1990, NA, 1990, 1998, NA, 1998, 2009, NA, 2007, 1981, NA, 1981, 2019, NA, 2007, 1991, NA, 1991, 1995… ## $ normals           <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRU… ## $ normals_1991_2020 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… ## $ normals_1981_2010 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRU… ## $ normals_1971_2000 <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… stations_search(\"Kamloops\", interval = \"hour\") ## # A tibble: 3 × 17 ##   prov  station_name station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1991_2020 normals_1981_2010 ##   <chr> <chr>             <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ## 1 BC    KAMLOOPS A         1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      1953  2013 TRUE    TRUE              TRUE              ## 2 BC    KAMLOOPS A        51423 1163781     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      2013  2023 TRUE    TRUE              FALSE             ## 3 BC    KAMLOOPS AUT      42203 1163842     71741 ZKA    50.7 -120.  345  Etc/GMT+8 hour      2006  2023 TRUE    TRUE              FALSE             ## # ℹ 1 more variable: normals_1971_2000 <lgl> stations_search(coords = c(50.667492, -120.329049), dist = 20, interval = \"hour\") ## # A tibble: 3 × 18 ##   prov  station_name station_id climate_id WMO_id TC_id   lat   lon  elev tz        interval start   end normals normals_1991_2020 normals_1981_2010 ##   <chr> <chr>             <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <chr>    <dbl> <dbl> <lgl>   <lgl>             <lgl>             ## 1 BC    KAMLOOPS A         1275 1163780     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      1953  2013 TRUE    TRUE              TRUE              ## 2 BC    KAMLOOPS AUT      42203 1163842     71741 ZKA    50.7 -120.  345  Etc/GMT+8 hour      2006  2023 TRUE    TRUE              FALSE             ## 3 BC    KAMLOOPS A        51423 1163781     71887 YKA    50.7 -120.  345. Etc/GMT+8 hour      2013  2023 TRUE    TRUE              FALSE             ## # ℹ 2 more variables: normals_1971_2000 <lgl>, distance <dbl> stations_dl() ## According to Environment Canada, Modified Date: 2023-01-24 23:30 UTC  ## Environment Canada Disclaimers: ## \"Station Inventory Disclaimer: Please note that this inventory list is a snapshot of stations on our website as of the modified date, and may be subject to change without notice.\" ## \"Station ID Disclaimer: Station IDs are an internal index numbering system and may be subject to change without notice.\"  ## Stations data saved... ## Use `stations()` to access most recent version and `stations_meta()` to see when this was last updated stations_meta() ## $ECCC_modified ## [1] \"2023-01-24 23:30:00 UTC\" ##  ## $weathercan_modified ## [1] \"2024-11-12\""},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"weather","dir":"","previous_headings":"General usage","what":"Weather","title":"Download Weather Data from Environment and Climate Change Canada","text":"station_id(s) can download weather data: can also download data multiple stations :","code":"kam <- weather_dl(station_ids = 51423, start = \"2018-02-01\", end = \"2018-04-15\") ## As of weathercan v0.3.0 time display is either local time or UTC ## See Details under ?weather_dl for more information. ## This message is shown once per session kam ## # A tibble: 1,776 × 37 ##    station_name station_id station_operator prov    lat   lon  elev climate_id WMO_id TC_id date       time                year  month day   hour  weather  hmdx ##    <chr>             <dbl> <lgl>            <chr> <dbl> <dbl> <dbl> <chr>      <chr>  <chr> <date>     <dttm>              <chr> <chr> <chr> <chr> <chr>   <dbl> ##  1 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 00:00:00 2018  02    01    00:00 <NA>       NA ##  2 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 01:00:00 2018  02    01    01:00 Snow       NA ##  3 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 02:00:00 2018  02    01    02:00 <NA>       NA ##  4 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 03:00:00 2018  02    01    03:00 <NA>       NA ##  5 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 04:00:00 2018  02    01    04:00 Cloudy     NA ##  6 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 05:00:00 2018  02    01    05:00 <NA>       NA ##  7 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 06:00:00 2018  02    01    06:00 <NA>       NA ##  8 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 07:00:00 2018  02    01    07:00 Cloudy     NA ##  9 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 08:00:00 2018  02    01    08:00 <NA>       NA ## 10 KAMLOOPS A        51423 NA               BC     50.7 -120.  345. 1163781    71887  YKA   2018-02-01 2018-02-01 09:00:00 2018  02    01    09:00 <NA>       NA ## # ℹ 1,766 more rows kam_pg <- weather_dl(station_ids = c(48248, 51423), start = \"2018-02-01\", end = \"2018-04-15\")"},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"climate-normals","dir":"","previous_headings":"","what":"Climate Normals","title":"Download Weather Data from Environment and Climate Change Canada","text":"access climate normals, first need know climate_id associated station ’re interested . can download climate normals normals_dl() function. See Getting Started vignette details.","code":"stations_search(\"Winnipeg\", normals_years = \"current\") ## # A tibble: 4 × 14 ##   prov  station_name                station_id climate_id WMO_id TC_id   lat   lon  elev tz        normals normals_1991_2020 normals_1981_2010 normals_1971_2000 ##   <chr> <chr>                            <dbl> <chr>       <dbl> <chr> <dbl> <dbl> <dbl> <chr>     <lgl>   <lgl>             <lgl>             <lgl>             ## 1 MB    WINNIPEG A CS                    27174 502S001     71849 XWG    49.9 -97.2  239. Etc/GMT+6 TRUE    TRUE              FALSE             FALSE             ## 2 MB    WINNIPEG INTL A                  51097 5023227        NA YWG    49.9 -97.2  239. Etc/GMT+6 TRUE    TRUE              FALSE             FALSE             ## 3 MB    WINNIPEG RICHARDSON AWOS         47407 5023226     71852 YWG    49.9 -97.2  239. Etc/GMT+6 TRUE    TRUE              FALSE             FALSE             ## 4 MB    WINNIPEG RICHARDSON INT'L A       3698 5023222     71852 YWG    49.9 -97.2  239. Etc/GMT+6 TRUE    TRUE              TRUE              TRUE n <- normals_dl(\"5023222\")"},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Download Weather Data from Environment and Climate Change Canada","text":"","code":"citation(\"weathercan\") ## To cite 'weathercan' in publications, please use: ##  ##   LaZerte, Stefanie E and Sam Albers (2018). weathercan: Download and format weather data from Environment and Climate Change Canada. The ##   Journal of Open Source Software 3(22):571. doi:10.21105/joss.00571. ##  ## A BibTeX entry for LaTeX users is ##  ##   @Article{, ##     title = {{weathercan}: {D}ownload and format weather data from Environment and Climate Change Canada}, ##     author = {Stefanie E LaZerte and Sam Albers}, ##     journal = {The Journal of Open Source Software}, ##     volume = {3}, ##     number = {22}, ##     pages = {571}, ##     year = {2018}, ##     url = {https://joss.theoj.org/papers/10.21105/joss.00571}, ##   }"},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Download Weather Data from Environment and Climate Change Canada","text":"data code repository licensed multiple licences. code licensed GPL-3. weather data licensed (Open Government License - Canada).","code":""},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"weathercan-in-the-wild","dir":"","previous_headings":"","what":"weathercan in the wild!","title":"Download Weather Data from Environment and Climate Change Canada","text":"Browse weathercan use cases rOpenSci.org Nathan Smith (@WraySmith) R package RavenR functions converting ECCC data downloaded weathercan .rvt format Raven. R package meteoland functions converting ECCC data downloaded weathercan format required use meteoland.","code":""},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"similar-packages","dir":"","previous_headings":"","what":"Similar packages","title":"Download Weather Data from Environment and Climate Change Canada","text":"rclimateca weathercan rclimateca developed roughly time result, present --date methods accessing downloading data ECCC. largest differences two packages : ) weathercan includes functions interpolating weather data directly integrating data sources. b) weathercan actively seeks apply tidy data principles R integrates well tidyverse including using tibbles nested listcols. c) rclimateca contains arguments specifying short vs. long data formats. d) rclimateca option formatting data MUData format using mudata2 package author. CHCN CHCN older package last updated 2012. Unfortunately, ECCC updated services within last couple years caused great many previous web scrapers fail. CHCN relies decommissioned older web-scraper currently broken.","code":""},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Download Weather Data from Environment and Climate Change Canada","text":"welcome contributions! make process painless possible involved, please see guide contributing","code":""},{"path":"https://docs.ropensci.org/weathercan/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Download Weather Data from Environment and Climate Change Canada","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/check_eccc.html","id":null,"dir":"Reference","previous_headings":"","what":"Check access to ECCC — check_eccc","title":"Check access to ECCC — check_eccc","text":"Checks whether internet access, weather data, normals data, eccc sites available accessible, whether running cran","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/check_eccc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check access to ECCC — check_eccc","text":"","code":"check_eccc()"},{"path":"https://docs.ropensci.org/weathercan/reference/check_eccc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check access to ECCC — check_eccc","text":"FALSE , TRUE ","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/check_eccc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check access to ECCC — check_eccc","text":"","code":"check_eccc() #> [1] FALSE"},{"path":"https://docs.ropensci.org/weathercan/reference/codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Meaning of climate normal 'codes' — codes","title":"Meaning of climate normal 'codes' — codes","text":"reference dataset containing codes matched meaning. Data downloaded using normals_dl() function contains columns indicating code. presented interpretation.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meaning of climate normal 'codes' — codes","text":"","code":"codes"},{"path":"https://docs.ropensci.org/weathercan/reference/codes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meaning of climate normal 'codes' — codes","text":"data frame 4 rows 2 variables: code Code meaning Explanation code","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/finches.html","id":null,"dir":"Reference","previous_headings":"","what":"RFID Data on finch visits to feeders — finches","title":"RFID Data on finch visits to feeders — finches","text":"RFID Data finch visits feeders","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/finches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RFID Data on finch visits to feeders — finches","text":"","code":"finches"},{"path":"https://docs.ropensci.org/weathercan/reference/finches.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RFID Data on finch visits to feeders — finches","text":"example dataset finch RFID data interpolation: bird_id Bird ID number time Time feeder_id feeder ID species Species lat Latitude station location degree decimal format lon Longitude station location degree decimal format","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/flags.html","id":null,"dir":"Reference","previous_headings":"","what":"Meaning of coded 'flags' — flags","title":"Meaning of coded 'flags' — flags","text":"reference dataset containing 'flags' matched meaning. Data downloaded using weather_dl() function contains columns indicating 'flags' codes presented interpretation.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/flags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meaning of coded 'flags' — flags","text":"","code":"flags"},{"path":"https://docs.ropensci.org/weathercan/reference/flags.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meaning of coded 'flags' — flags","text":"data frame 16 rows 2 variables: code Flag code meaning Explanation code","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/glossary.html","id":null,"dir":"Reference","previous_headings":"","what":"Glossary of units and terms — glossary","title":"Glossary of units and terms — glossary","text":"reference dataset matching information columns data downloaded using weather_dl() function. Indicates units data, contains link ECCC glossary page explaining measurement.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/glossary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glossary of units and terms — glossary","text":"","code":"glossary"},{"path":"https://docs.ropensci.org/weathercan/reference/glossary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Glossary of units and terms — glossary","text":"data frame 77 rows 5 variables: interval Data interval type, 'hour', 'day', 'month'. ECCC_name Original column name downloaded directly ECCC weathercan_name R-compatible name given downloaded weather_dl() function using default argument format =   TRUE. units Units measurement. ECCC_ref Link glossary reference page ECCC website.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/glossary_normals.html","id":null,"dir":"Reference","previous_headings":"","what":"Glossary of terms for Climate Normals — glossary_normals","title":"Glossary of terms for Climate Normals — glossary_normals","text":"reference dataset matching information columns climate normals data downloaded using normals_dl() function. Indicates names descriptions different data measurements.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/glossary_normals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glossary of terms for Climate Normals — glossary_normals","text":"","code":"glossary_normals"},{"path":"https://docs.ropensci.org/weathercan/reference/glossary_normals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Glossary of terms for Climate Normals — glossary_normals","text":"data frame 18 rows 3 variables: ECCC_name Original measurement type ECCC weathercan_name R-compatible name given downloaded normals_dl() function description Description measurement type ECCC","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly weather data for Kamloops — kamloops","title":"Hourly weather data for Kamloops — kamloops","text":"Downloaded weather(). Terms thoroughly defined https://climate.weather.gc.ca/glossary_e.html","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly weather data for Kamloops — kamloops","text":"","code":"kamloops"},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hourly weather data for Kamloops — kamloops","text":"example dataset hourly weather data Kamloops: station_name Station name station_id Environment Canada's station ID number. Required downloading station data. prov Province lat Latitude station location degree decimal format lon Longitude station location degree decimal format date Date time Time year Year month Month day Day hour Hour qual Data quality weather state atmosphere specific time. hmdx Humidex hmdx_flag Humidex data flag pressure Pressure (kPa) pressure_flag Pressure data flag rel_hum Relative humidity rel_hum_flag Relative humidity data flag temp Temperature temp_dew Dew Point Temperature temp_dew_flag Dew Point Temperature flag visib Visibility (km) visib_flag Visibility data flag wind_chill Wind Chill wind_chill_flag Wind Chill flag wind_dir Wind Direction (10's degrees) wind_dir_flag wind Direction Flag wind_spd Wind speed km/hr wind_spd_flag Wind speed flag elev Elevation (m) climate_id Climate identifier WMO_id World Meteorological Organization Identifier TC_id Transport Canada Identifier","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hourly weather data for Kamloops — kamloops","text":"https://climate.weather.gc.ca/index_e.html","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily weather data for Kamloops — kamloops_day","title":"Daily weather data for Kamloops — kamloops_day","text":"Downloaded weather(). Terms thoroughly defined https://climate.weather.gc.ca/glossary_e.html","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily weather data for Kamloops — kamloops_day","text":"","code":"kamloops_day"},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops_day.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily weather data for Kamloops — kamloops_day","text":"example dataset daily weather data Kamloops: station_name Station name station_id Environment Canada's station ID number. Required downloading station data. prov Province lat Latitude station location degree decimal format lon Longitude station location degree decimal format date Date year Year month Month day Day cool_deg_days Cool degree days cool_deg_days_flag Cool degree days flag dir_max_gust Direction max wind gust dir_max_gust_flag Direction max wind gust flag heat_deg_days Heat degree days heat_deg_days_flag Heat degree days flag max_temp Maximum temperature max_temp_flag Maximum temperature flag mean_temp Mean temperature mean_temp_flag Mean temperature flag min_temp Minimum temperature min_temp_flag Minimum temperature flag snow_grnd Snow ground (cm) snow_grnd_flag Snow ground flag spd_max_gust Speed max gust km/h spd_max_gust_flag Speed max gust flag total_precip Total precipitation (form) total_precip_flag Total precipitation flag total_rain Total rain (form) total_rain_flag Total rain flag total_snow Total snow (form) total_snow_flag Total snow flag elev Elevation (m) climate_id Climate identifier WMO_id World Meteorological Organization Identifier TC_id Transport Canada Identifier","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/kamloops_day.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily weather data for Kamloops — kamloops_day","text":"https://climate.weather.gc.ca/index_e.html","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/normals_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"Download climate normals from Environment and Climate Change Canada — normals_dl","title":"Download climate normals from Environment and Climate Change Canada — normals_dl","text":"Downloads climate normals Environment Climate Change Canada (ECCC) one stations (defined climate_ids). details units, see glossary_normals data frame glossary_normals vignette: vignette(\"glossary_normals\", package = \"weathercan\")","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/normals_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download climate normals from Environment and Climate Change Canada — normals_dl","text":"","code":"normals_dl(   climate_ids,   normals_years = \"1981-2010\",   format = TRUE,   stn = NULL,   verbose = FALSE,   quiet = FALSE )"},{"path":"https://docs.ropensci.org/weathercan/reference/normals_dl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download climate normals from Environment and Climate Change Canada — normals_dl","text":"climate_ids Character. vector containing Climate ID(s) station(s) wish download data . See stations data frame stations_search function find Climate IDs. normals_years Character. year range want climate normals. Default \"1981-2010\". One \"1971-2000\", \"1981-2010\", \"1991-2020\". Note: \"1991-2020\" available online, yet downloadable via weathercan. format Logical. TRUE (default) formats measurements numeric date accordingly. Unlike weather_dl(), normals_dl() always format column headings normals data ECCC directly made data frame without . stn DEFUNCT. Now use stations_dl() update internal data stations_meta() check date last updated. verbose Logical. Include progress messages quiet Logical. Suppress messages (including messages regarding missing data, etc.)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/normals_dl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download climate normals from Environment and Climate Change Canada — normals_dl","text":"tibble nested normals first/last frost data","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/normals_dl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download climate normals from Environment and Climate Change Canada — normals_dl","text":"Climate normals ECCC include two types data, averages month variety measurements well data relating frost-free period. two data sources quite different, return nested data user can extract wish. See examples use unnest() function tidyr package extract two different datasets. data also returns column called meets_wmo reflects whether climate normals station met WMO standards temperature precipitation (.e. code >= ). measurement column corresponding _code column reflects data quality measurement (see 1991-2020, 1981-2010, 1971-2000 details) ECCC calculation documents. Climate normals downloaded url stored option weathercan.urls.normals. change location use: options(weathercan.urls.normals = \"your_new_url\").","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/normals_dl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download climate normals from Environment and Climate Change Canada — normals_dl","text":"","code":"if (FALSE) { # check_eccc()  # Find the climate_id stations_search(\"Brandon A\", normals_years = \"current\")  # Download climate normals 1981-2010 n <- normals_dl(climate_ids = \"5010480\") n  # Pull out last frost data *with* station information library(tidyr) f <- unnest(n, frost) f  # Pull out normals *with* station information nm <- unnest(n, normals) nm  # Download climate normals 1971-2000 n <- normals_dl(climate_ids = \"5010480\", normals_years = \"1971-2000\") n  # Note that some do not have last frost dates n$frost  # Download multiple stations for 1981-2010, n <- normals_dl(climate_ids = c(\"301C3D4\", \"301FFNJ\", \"301N49A\")) unnest(n, frost)   # Note, putting both normals and frost data into the same data set can be done but makes for # a very unweildly dataset (there is lots of repetition) nm <- unnest(n, normals) |>   unnest(frost) }"},{"path":"https://docs.ropensci.org/weathercan/reference/normals_measurements.html","id":null,"dir":"Reference","previous_headings":"","what":"List of climate normals measurements for each station — normals_measurements","title":"List of climate normals measurements for each station — normals_measurements","text":"data frame listing climate normals measurements available station.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/normals_measurements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of climate normals measurements for each station — normals_measurements","text":"","code":"normals_measurements"},{"path":"https://docs.ropensci.org/weathercan/reference/normals_measurements.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of climate normals measurements for each station — normals_measurements","text":"data frame 113,325 rows 5 variables: prov Province station_name Station Name climate_id Climate ID normals Year range climate normals measurement Climate normals measurement available station","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/pg.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly weather data for Prince George — pg","title":"Hourly weather data for Prince George — pg","text":"Downloaded weather(). Terms thoroughly defined https://climate.weather.gc.ca/glossary_e.html","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/pg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly weather data for Prince George — pg","text":"","code":"pg"},{"path":"https://docs.ropensci.org/weathercan/reference/pg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hourly weather data for Prince George — pg","text":"example dataset hourly weather data Prince George: station_name Station name station_id Environment Canada's station ID number. Required downloading station data. prov Province lat Latitude station location degree decimal format lon Longitude station location degree decimal format date Date time Time year Year month Month day Day hour Hour qual Data quality weather state atmosphere specific time. hmdx Humidex hmdx_flag Humidex data flag pressure Pressure (kPa) pressure_flag Pressure data flag rel_hum Relative humidity rel_hum_flag Relative humidity data flag temp Temperature temp_dew Dew Point Temperature temp_dew_flag Dew Point Temperatureflag visib Visibility (km) visib_flag Visibility data flag wind_chill Wind Chill wind_chill_flag Wind Chill flag wind_dir Wind Direction (10's degrees) wind_dir_flag wind Direction Flag wind_spd Wind speed km/hr wind_spd_flag Wind speed flag elev Elevation (m) climate_id Climate identifier WMO_id World Meteorological Organization Identifier TC_id Transport Canada Identifier","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/pg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hourly weather data for Prince George — pg","text":"https://climate.weather.gc.ca/index_e.html","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Access Station data downloaded from Environment and Climate Change Canada — stations","title":"Access Station data downloaded from Environment and Climate Change Canada — stations","text":"function access built-stations data frame. can update data frame stations_dl() update locally stored data.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access Station data downloaded from Environment and Climate Change Canada — stations","text":"","code":"stations()"},{"path":"https://docs.ropensci.org/weathercan/reference/stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Access Station data downloaded from Environment and Climate Change Canada — stations","text":"data frame: prov Province station_name Station name station_id Environment Canada's station ID number. Required downloading station data. climate_id Climate ID number WMO_id Climate ID number TC_id Climate ID number lat Latitude station location degree decimal format lon Longitude station location degree decimal format elev Elevation station location metres tz Local timezone excluding Daylight Savings interval Interval data measurements ('hour', 'day', 'month') start Starting year data record end Ending year data record normals Whether climate normals available station (new behaivour) normals_1991_2020 Whether 1991-2020 climate normals available station. Note even available, yet downloadable via weathercan. normals_1981_2010 Whether 1981-2010 climate normals available station normals_1971_2000 Whether 1971-2000 climate normals available station","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Access Station data downloaded from Environment and Climate Change Canada — stations","text":"https://climate.weather.gc.ca/index_e.html","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access Station data downloaded from Environment and Climate Change Canada — stations","text":"can check last updated stations_meta(). dataset containing station information downloaded Environment Climate Change Canada. Note station may several station IDs, depending data collection changed years. Station information can updated running stations_dl().","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access Station data downloaded from Environment and Climate Change Canada — stations","text":"","code":"if (FALSE) { # check_eccc() stations() stations_meta()  # Which Manitoba stations have *any* climate normals?  library(dplyr) filter(stations(), interval == \"hour\", normals == TRUE, prov == \"MB\") }"},{"path":"https://docs.ropensci.org/weathercan/reference/stations_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available stations — stations_dl","title":"Get available stations — stations_dl","text":"function can used download Station Inventory CSV file Environment Climate Change Canada. necessary station interested recently added. 'stations' data set included package contains station data downloaded package last compiled. function may take minutes run.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available stations — stations_dl","text":"","code":"stations_dl(skip = NULL, verbose = FALSE, quiet = FALSE)"},{"path":"https://docs.ropensci.org/weathercan/reference/stations_dl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available stations — stations_dl","text":"skip Numeric. Number lines skip beginning csv. NULL, automatically derived. verbose Logical. Include progress messages quiet Logical. Suppress messages (including messages regarding missing data, etc.)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_dl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get available stations — stations_dl","text":"stations list downloaded url stored option weathercan.urls.stations. change location use options(weathercan.urls.stations = \"your_new_url\"). list stations climate normals downloaded url stored option weathercan.urls.stations.normals. change location use options(weathercan.urls.normals = \"your_new_url\"). Currently two sets climate normals available: 1981-2010 1971-2000. Whether station climate normals given year range specified normals_1981_2010 normals_1971_2000, respectively. column normals represents current year range climate normals (.e. currently 1981-2010)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_dl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available stations — stations_dl","text":"","code":"if (FALSE) { # check_eccc()  # Update stations data frame stations_dl()  # Updated stations data frame is now automatically used stations_search(\"Winnipeg\") }"},{"path":"https://docs.ropensci.org/weathercan/reference/stations_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Show stations list meta data — stations_meta","title":"Show stations list meta data — stations_meta","text":"Date ECCC update date downloaded via weathercan.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show stations list meta data — stations_meta","text":"","code":"stations_meta()"},{"path":"https://docs.ropensci.org/weathercan/reference/stations_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show stations list meta data — stations_meta","text":"","code":"if (FALSE) { # check_eccc() stations_meta() }"},{"path":"https://docs.ropensci.org/weathercan/reference/stations_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for stations by name or location — stations_search","title":"Search for stations by name or location — stations_search","text":"Returns stations match name provided within dist km location provided. designed provide user information decide station get weather data .","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for stations by name or location — stations_search","text":"","code":"stations_search(   name = NULL,   coords = NULL,   dist = 10,   interval = c(\"hour\", \"day\", \"month\"),   normals_years = NULL,   normals_only = NULL,   stn = NULL,   starts_latest = NULL,   ends_earliest = NULL,   verbose = FALSE,   quiet = FALSE )"},{"path":"https://docs.ropensci.org/weathercan/reference/stations_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for stations by name or location — stations_search","text":"name Character. vector length 1 text match. match station names contain components name, can different orders separated text. coords Numeric. vector length 2 latitude longitude place match . Overrides lat lon also provided. dist Numeric. Match stations within many kilometres coords. interval Character. Return stations data intervals. Must \"hour\", \"day\", \"month\". normals_years Character. One NULL (default), current, 1991-2020, 1981-2010, 1971-2000. current returns stations recent complete normals year range (.e. 1981-2010). Default NULL filter climate normals. Specific year ranges return stations normals period. See Details specifics. normals_only DEPRECATED. Logical. Return stations climate normals? stn DEFUNCT. Now use stations_dl() update internal data stations_meta() check date last updated. starts_latest Numeric. Restrict results stations data collection beginning specified year. ends_earliest Numeric. Restrict results stations data collection ending specified year. verbose Logical. Include progress messages quiet Logical. Suppress messages (including messages regarding missing data, etc.)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for stations by name or location — stations_search","text":"Returns subset stations data frame match search parameters. search location, extra column 'distance' shows distance kilometres location station. stations found withing dist, closest 10 stations returned.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for stations by name or location — stations_search","text":"search coordinates, users must make sure sp package installed. current, recent, climate normals year range 1981-2010.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/stations_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for stations by name or location — stations_search","text":"","code":"if (FALSE) { # check_eccc()  stations_search(name = \"Kamloops\") stations_search(name = \"Kamloops\", interval = \"hour\")  stations_search(name = \"Ottawa\", starts_latest = 1950, ends_earliest = 2010)  stations_search(name = \"Ottawa\", normals_years = \"current\")   # 1981-2010 stations_search(name = \"Ottawa\", normals_years = \"1981-2010\") # Same as above stations_search(name = \"Ottawa\", normals_years = \"1971-2000\") # 1971-2010  if(requireNamespace(\"sf\")) {   stations_search(coords = c(53.915495, -122.739379)) } }"},{"path":"https://docs.ropensci.org/weathercan/reference/weather_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"Download weather data from Environment and Climate Change Canada — weather_dl","title":"Download weather data from Environment and Climate Change Canada — weather_dl","text":"Downloads data Environment Climate Change Canada (ECCC) one stations. details units, see glossary vignette (vignette(\"glossary\", package = \"weathercan\")) glossary online https://climate.weather.gc.ca/glossary_e.html.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weather_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download weather data from Environment and Climate Change Canada — weather_dl","text":"","code":"weather_dl(   station_ids,   start = NULL,   end = NULL,   interval = \"hour\",   trim = TRUE,   format = TRUE,   string_as = NA,   time_disp = \"none\",   stn = NULL,   encoding = \"UTF-8\",   list_col = FALSE,   verbose = FALSE,   quiet = FALSE )"},{"path":"https://docs.ropensci.org/weathercan/reference/weather_dl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download weather data from Environment and Climate Change Canada — weather_dl","text":"station_ids Numeric/Character. vector containing ID(s) station(s) wish download data . See stations data frame stations_search function find IDs. start Date/Character. start date data YYYY-MM-DD format (applies stations_ids). Defaults start range. end Date/Character. end date data YYYY-MM-DD format (applies station_ids). Defaults end range. interval Character. Interval data, one \"hour\", \"day\", \"month\". trim Logical. Trim missing values start end weather dataframe. applies format = TRUE format Logical. TRUE, formats data immediate use. FALSE, returns data exactly downloaded Environment Climate Change Canada. Useful dealing changes Environment Canada format data downloads. string_as Character. value replace character strings numeric measurement . See Details. time_disp Character. Either \"none\" (default) \"UTC\". See details. stn DEFUNCT. Now use stations_dl() update internal data stations_meta() check date last updated. encoding Character. Text encoding download. list_col Logical. Return data nested data set? Defaults FALSE. applies format = TRUE verbose Logical. Include progress messages quiet Logical. Suppress messages (including messages regarding missing data, etc.)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weather_dl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download weather data from Environment and Climate Change Canada — weather_dl","text":"tibble station ID, name weather data.","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weather_dl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download weather data from Environment and Climate Change Canada — weather_dl","text":"Data can returned 'raw' (format = FALSE) can formatted. Formatting transforms dates/times date/time class, renames columns, converts data numeric possible. character strings contained traditionally numeric fields (e.g., weather speed may values \"< 30\"), can replaced character specified string_as. default NA. Formatting also replaces data associated certain flags NA (M = Missing). Start end date can specified, , default start end date range (result downloading lot data!). hourly data, timezones always \"UTC\", actual times either local time (default; time_disp = \"none\"), UTC (time_disp = \"UTC\"). time_disp = \"none\", times reflect local time without daylight savings. means relative measures time, \"nighttime\", \"daytime\", \"dawn\", \"dusk\" comparable among stations different timezones. useful comparing daily cycles. time_disp = \"UTC\" times transformed UTC timezone. Thus midnight Kamloops register 08:00:00 (Pacific time 8 hours behind UTC). useful tracking weather events time, result odd 'daily' measures weather (e.g., data collected afternoon Sept 1 Kamloops recorded collected Sept 2 UTC). Files downloaded url stored getOption(\"weathercan.urls.weather\"). change location use options(weathercan.urls.weather = \"your_new_url\"). Data downloaded ECCC series files bound together. file corresponds different month, year, depending interval. Metadata (station name, lat, lon, elevation, etc.) extracted start recent file (.e. recent dates) given station. Note important data (.e. station name, lat, lon) unlikely change files (.e. dates), data may may available depending date file (e.g., station operator added April 1st 2018, data includes dates April 2018).","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weather_dl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download weather data from Environment and Climate Change Canada — weather_dl","text":"","code":"if (FALSE) { # check_eccc()  kam <- weather_dl(station_ids = 51423,                   start = \"2016-01-01\", end = \"2016-02-15\")  stations_search(\"Kamloops A$\", interval = \"hour\") stations_search(\"Prince George Airport\", interval = \"hour\")  kam.pg <- weather_dl(station_ids = c(48248, 51423),                      start = \"2016-01-01\", end = \"2016-02-15\")  library(ggplot2)  ggplot(data = kam.pg, aes(x = time, y = temp,                           group = station_name,                           colour = station_name)) +        geom_line() }"},{"path":"https://docs.ropensci.org/weathercan/reference/weather_interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate and add weather data to a dataframe — weather_interp","title":"Interpolate and add weather data to a dataframe — weather_interp","text":"data weather measurements perfectly line , perform linear interpolation two weather measurements merge results provided dataset. applies numerical weather columns (see weather details).","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weather_interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate and add weather data to a dataframe — weather_interp","text":"","code":"weather_interp(   data,   weather,   cols = \"all\",   interval = \"hour\",   na_gap = 2,   quiet = FALSE )"},{"path":"https://docs.ropensci.org/weathercan/reference/weather_interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate and add weather data to a dataframe — weather_interp","text":"data Dataframe. Data dates times weather data added. weather Dataframe. Weather data downloaded weather interpolated added data. cols Character. Vector containing weather columns add '' relevant columns. Note measure omitted linearly interpolated (e.g., wind direction). interval interval weather data recorded ? \"hour\" \"day\". na_gap many hours days (depending interval) acceptable skip interpolating NAs (see details). quiet Logical. Suppress messages (including messages regarding missing data, etc.)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weather_interp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolate and add weather data to a dataframe — weather_interp","text":"Dealing NA values NAs weather data, na_gap can used specify tolerance. example, tolerance 2 interval \"hour\", means two hour gap data can interpolated (.e. data 9AM 11AM, 10AM, data 9AM 11AM interpolated. , however, 9AM 12PM, 10AM 11AM, interpolation happen data 9AM 12PM returned NA.)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weather_interp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate and add weather data to a dataframe — weather_interp","text":"","code":"if (FALSE) { # check_eccc()  # Weather data only head(kamloops)  # Data about finch observations at RFID feeders in Kamloops, BC head(finches)  # Match weather to finches finch_weather <- weather_interp(data = finches, weather = kamloops) }"},{"path":"https://docs.ropensci.org/weathercan/reference/weathercan-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Easy downloading of weather data from Environment and Climate Change Canada — weathercan-package","title":"Easy downloading of weather data from Environment and Climate Change Canada — weathercan-package","text":"weathercan R package simplifying downloading Historical Climate Data Environment Climate Change Canada (ECCC) website (https://climate.weather.gc.ca)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weathercan-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Easy downloading of weather data from Environment and Climate Change Canada — weathercan-package","text":"Bear mind downloads can fairly large performing repeated, large downloads may use Environment Canada's bandwidth unnecessarily. Try stick need. four main aspects package: Access stations lists stations (data frame listing stations) stations_search() identify stations name proximity location stations_dl() re-download/update stations data Download weather data weather_dl() Merge weather data data sets interpolation time weather_interp() Download climate normals data normals_dl() also include several practice data sets: finches kamloops kamloops_day pg well several vignettes available package Online: General Usage: vignette(\"weathercan\", package = \"weathercan\") Interpolating: vignette(\"interpolation\", package = \"weathercan\") Reproducibility: vignette(\"reproducibility\", package = \"weathercan\") Flags Codes: vignette(\"flags\", package = \"weathercan\") Weather: Terms Units: vignette(\"glossary\", package = \"weathercan\") Climate Normals: Terms Units: vignette(\"glossary_normals\", package = \"weathercan\") also advanced articles: Using weathercan tidyhydat)","code":""},{"path":"https://docs.ropensci.org/weathercan/reference/weathercan-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Easy downloading of weather data from Environment and Climate Change Canada — weathercan-package","text":"Environment Climate Change Canada: https://www.canada.ca/en/environment-climate-change.html Glossary terms https://climate.weather.gc.ca/glossary_e.html ECCC Historical Climate Data: https://climate.weather.gc.ca/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/reference/weathercan-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Easy downloading of weather data from Environment and Climate Change Canada — weathercan-package","text":"Maintainer: Steffi LaZerte sel@steffilazerte.ca (ORCID) contributors: Sam Albers sam.albers@gmail.com (ORCID) [contributor] Nick Brown nicholas512@gmail.com (ORCID) [contributor] Kevin Cazelles kevin.cazelles@gmail.com (ORCID) [contributor]","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-073","dir":"Changelog","previous_headings":"","what":"weathercan 0.7.3","title":"weathercan 0.7.3","text":"Switch stations inventory list new location Don’t try download future weather Better test coverage (#149; 🙏 thanks @shandiya, @mciechanumich!) Replaced superseded dplyr functions (#150; 🙏 thanks @JauntyJJS, @RichardLitt!) Fixed test coverage GitHub Action (🙏 thanks @kellijohnson-NOAA!)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-072","dir":"Changelog","previous_headings":"","what":"weathercan 0.7.2","title":"weathercan 0.7.2","text":"Fix normals work new ECCC data format Prepare normals_dl() family new 1991-2020 normals","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-071","dir":"Changelog","previous_headings":"","what":"weathercan 0.7.1","title":"weathercan 0.7.1","text":"stations() now uses recent version data even hasn’t changed (prevent message regarding age stations data frame). Remove startup message deprecated stations data frame Move Mapping Article docs website (https://steffilazerte.ca/posts/weathercan-mapping/)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-070","dir":"Changelog","previous_headings":"","what":"weathercan 0.7.0","title":"weathercan 0.7.0","text":"Internal updates tests (testthat 3rd edition) Small changes messages Switch completely sf (remove sp dependency) Remove “Use tidyverse” vignette - better go source: https://r4ds.hadley.nz/ Remove “Meteoland” vignette functions defunct","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.7.0","text":"Fix bug Interpolate silently transforms non-matching timezones. can produce incorrect matching using “local-UTC” timezones (weathercan v0.3.0). Now timezone mismatch results error users can decide handled.","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-063","dir":"Changelog","previous_headings":"","what":"weathercan 0.6.3","title":"weathercan 0.6.3","text":"Internal re-arranging clean Stations without lat/lon now NA timezone Fixed vignette images","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-062","dir":"Changelog","previous_headings":"","what":"weathercan 0.6.2","title":"weathercan 0.6.2","text":"CRAN release: 2021-12-01 Create cache dir stations data recursively Fix choice local vs. package version stations data frame Update readr v2 Add flexibility csv/tsv stations files (fixes #126) Update stations url Make examples tests robust internet issues","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-061","dir":"Changelog","previous_headings":"","what":"weathercan 0.6.1","title":"weathercan 0.6.1","text":"CRAN release: 2021-06-05","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-6-1","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.6.1","text":"Save stations() data local cache","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-060","dir":"Changelog","previous_headings":"","what":"weathercan 0.6.0","title":"weathercan 0.6.0","text":"CRAN release: 2021-05-14","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"big-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Big changes","title":"weathercan 0.6.0","text":"Move data frame stations function stations(). Returns data updateable stations_dl() can check download dates version stations_meta() (fixes #10) stations available (2x many!) year ranges available (1981-2010 1971-2000; Note climate normals 1961-1990 available ECCC, don’t climate ids making tricky download reliably)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.6.0","text":"Remove old deprecated function arguments Better test coverage (#81) Better handling http errors (#101, #119; Thanks @KevCaz!)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.6.0","text":"Download stations data frame ECCC Google drive rather ECCC FTP site Update dependency versions (#111, #112, #118)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-050-2020-01-14","dir":"Changelog","previous_headings":"","what":"weathercan 0.5.0 (2020-01-14)","title":"weathercan 0.5.0 (2020-01-14)","text":"CRAN release: 2021-01-15","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.5.0 (2020-01-14)","text":"Internal changes address change formatting historical weather data provided ECCC (includes new parameters amount precipitation mm: precip_amt, precip_amt_flag; fixes #107) Updated stations data frame","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.5.0 (2020-01-14)","text":"Updated normals column values (fixes #106)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-040-2020-08-26","dir":"Changelog","previous_headings":"","what":"weathercan 0.4.0 (2020-08-26)","title":"weathercan 0.4.0 (2020-08-26)","text":"CRAN release: 2020-09-02","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.4.0 (2020-08-26)","text":"Fixed odd bug Linux systems failed download stations data","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"features-and-potentially-breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Features and potentially breaking changes","title":"weathercan 0.4.0 (2020-08-26)","text":"Caches individual downloaded files, may see speed even change parameters download. missing values meta data previously “” now explicitly NAs","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"internal-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"weathercan 0.4.0 (2020-08-26)","text":"Use readr reading data Use vcr tests","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-034-2020-04-14","dir":"Changelog","previous_headings":"","what":"weathercan 0.3.4 (2020-04-14)","title":"weathercan 0.3.4 (2020-04-14)","text":"CRAN release: 2020-04-17","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-3-4","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.3.4 (2020-04-14)","text":"Internal changes fix compatibility tibble v3.0.0 Internal changes fix compatibility dplyr v1.0.0 Updated internal stations data frame","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-033-2020-01-24","dir":"Changelog","previous_headings":"","what":"weathercan 0.3.3 (2020-01-24)","title":"weathercan 0.3.3 (2020-01-24)","text":"CRAN release: 2020-02-05","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-3-3","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.3.3 (2020-01-24)","text":"Internal changes address issues testing Remove reliance ECCC servers testing CRAN Update internal datasets","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-032-2020-01-06","dir":"Changelog","previous_headings":"","what":"weathercan 0.3.2 (2020-01-06)","title":"weathercan 0.3.2 (2020-01-06)","text":"CRAN release: 2020-01-08","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.3.2 (2020-01-06)","text":"Internal changes address expected changes normals metadata Internal changes address problems connections Windows Update links website","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-031-2019-09-27","dir":"Changelog","previous_headings":"","what":"weathercan 0.3.1 (2019-09-27)","title":"weathercan 0.3.1 (2019-09-27)","text":"CRAN release: 2019-09-29","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.3.1 (2019-09-27)","text":"Internal changes address change formatting historical weather data provided ECCC (fixes #83)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-030-2019-09-25","dir":"Changelog","previous_headings":"","what":"weathercan 0.3.0 (2019-09-25)","title":"weathercan 0.3.0 (2019-09-25)","text":"CRAN release: 2019-09-25","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"big-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Big changes","title":"weathercan 0.3.0 (2019-09-25)","text":"New function: normals_dl() function downloads climate normals. Addresses issue #38. New argument: stations_search() normals_only return stations climate normals Deprecated url argument favour weathercan.urls.stations, weathercan.urls.weather weathercan.urls.normals options. Deprecated tz_disp favour time_disp. Now timezones UTC, displayed time either local time UTC. time_disp = “none”, time displayed local time without daylight savings, similar ECCC presents data. means data different time zones similar ecological times (.e. midnights comparable), actual times UTC. time_disp = “UTC’, time displayed UTC timezone, meaning stations different times zones true times (.e. midnight observation Toronto three hours midnight observation Vancouver). Addresses issue #74.","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"small-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Small changes","title":"weathercan 0.3.0 (2019-09-25)","text":"Add parameter station_search() restrict start end dates. Addresses issue #35. Internal change, switching .data “” non-standard evaluations opposed listing global variables Tweaks keep compatibility wit tidyr","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.3.0 (2019-09-25)","text":"Fix bug #69 resulted daily downloads missing partial years date range spanned two calendar years Fix bug #70 internal stations data frame references conflicted local references stations Fix bug #72 security vulnerability article’s json","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-028-2018-10-08","dir":"Changelog","previous_headings":"","what":"weathercan 0.2.8 (2018-10-08)","title":"weathercan 0.2.8 (2018-10-08)","text":"CRAN release: 2018-10-08","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-2-8","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.2.8 (2018-10-08)","text":"Add timezones stations data frame remove dependency Google API. Timezones added lutz package, updates stations data frame now require lutz sf packages (added Suggests).","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"changes-0-2-8","dir":"Changelog","previous_headings":"","what":"Changes","title":"weathercan 0.2.8 (2018-10-08)","text":"Sort stations station_id station_name","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"other-0-2-8","dir":"Changelog","previous_headings":"","what":"Other","title":"weathercan 0.2.8 (2018-10-08)","text":"Update internal data frames","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-027-2018-06-27","dir":"Changelog","previous_headings":"","what":"weathercan 0.2.7 (2018-06-27)","title":"weathercan 0.2.7 (2018-06-27)","text":"CRAN release: 2018-07-05","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-2-7","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.2.7 (2018-06-27)","text":"Fix bug created ECCC changed file metadata dates April 1st 2018 (affected downloads included dates April 1st, 2018) - Results new column station_operator data (NA unavailable older stations). Adjust code flexibility handle future changes Add catch warn user end dates earlier start dates","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"changes-0-2-7","dir":"Changelog","previous_headings":"","what":"Changes","title":"weathercan 0.2.7 (2018-06-27)","text":"Update readme/vignettes/internal data sets include new columns Update internal stations data frame well flags glossary Remove tibble dependency relying dplyr","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-2-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.2.6 (2018-05-25)","text":"Fix bug created ECCC removed Data Quality Column Adjust code flexibility handle future changes Add tests catch future changes","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Changes","title":"weathercan 0.2.5 (2018-03-02)","text":"sensible messages missing station data Streamline messages multiple stations Accepts older R version stations_dl fails gracefully R versions < 3.3.4 Update stations dataframe","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-2-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.2.5 (2018-03-02)","text":"Fix error missing station data one several stations","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"weathercan-024-2018-02-01","dir":"Changelog","previous_headings":"","what":"weathercan 0.2.4 (2018-02-01)","title":"weathercan 0.2.4 (2018-02-01)","text":"Now part ropensci.org!","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"weathercan 0.2.4 (2018-02-01)","text":"sp moved suggests, users now prompted install sp want search stations coordinates weather_dl() replaces weather() weather_interp() replaces add_weather() stations_dl() replaces stations_all() tz_calc() replaces get_tz() Internal code modifications match best practices","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"changes-0-2-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"weathercan 0.2.3 (2017-11-22)","text":"Updated stations data Added flags glossary datasets well vignettes stations_search() warns user name looks like coords stations_search() coord now returns closest 10 stations add_weather() warns user trying interpolate weather >1 station Updated code conform rOpenSci requirements Data downloaded multiple timezones defaults UTC","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-2-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.2.3 (2017-11-22)","text":"weather(format = FALSE) properly returns data updated weather() work lubridate 1.7.1","code":""},{"path":[]},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"weathercan 0.2.2 (2017-06-16)","text":"Update expand vignettes (closes #15) Data now returned tibbles Added listcol functionality (closes #8) Added internal tests interpolation Updated R version Standardized reference stations dataset (stn) functions","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"major-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"weathercan 0.2.2 (2017-06-16)","text":"envirocan renamed weathercan (closes #17)","code":""},{"path":"https://docs.ropensci.org/weathercan/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"weathercan 0.2.2 (2017-06-16)","text":"Fixed inclusion New Brunswick stations (closes #9) Downloads data return empty tibble informative message (closes #21)","code":""}]
